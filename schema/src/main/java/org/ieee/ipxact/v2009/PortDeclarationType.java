//
// This file was generated by the Eclipse Implementation of JAXB, v4.0.5 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
//


package org.ieee.ipxact.v2009;

import jakarta.xml.bind.annotation.XmlAccessType;
import jakarta.xml.bind.annotation.XmlAccessorType;
import jakarta.xml.bind.annotation.XmlElement;
import jakarta.xml.bind.annotation.XmlSeeAlso;
import jakarta.xml.bind.annotation.XmlType;


/**
 * Basic port declarations.
 * 
 * <p>Java class for portDeclarationType complex type</p>.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.</p>
 * 
 * <pre>{@code
 * <complexType name="portDeclarationType">
 *   <complexContent>
 *     <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       <sequence>
 *         <group ref="{http://www.spiritconsortium.org/XMLSchema/SPIRIT/1685-2009}nameGroupPort"/>
 *         <choice>
 *           <element name="wire" type="{http://www.spiritconsortium.org/XMLSchema/SPIRIT/1685-2009}portWireType"/>
 *           <element name="transactional" type="{http://www.spiritconsortium.org/XMLSchema/SPIRIT/1685-2009}portTransactionalType"/>
 *         </choice>
 *         <sequence>
 *           <element name="access" type="{http://www.spiritconsortium.org/XMLSchema/SPIRIT/1685-2009}portAccessType" minOccurs="0"/>
 *         </sequence>
 *       </sequence>
 *     </restriction>
 *   </complexContent>
 * </complexType>
 * }</pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "portDeclarationType", propOrder = {
    "name",
    "displayName",
    "description",
    "wire",
    "transactional",
    "access"
})
@XmlSeeAlso({
    PortType.class
})
public class PortDeclarationType {

    /**
     * Unique name
     * 
     */
    @XmlElement(required = true)
    protected String name;
    /**
     * Element name for display purposes. Typically a few words providing a more detailed and/or user-friendly name than the spirit:name.
     * 
     */
    protected String displayName;
    /**
     * Full description string, typically for documentation
     * 
     */
    protected String description;
    /**
     * Defines a port whose type resolves to simple bits.
     * 
     */
    protected PortWireType wire;
    /**
     * Defines a port that implements or uses a service that can be implemented with functions or methods.
     * 
     */
    protected PortTransactionalType transactional;
    /**
     * Port access characteristics.
     * 
     */
    protected PortAccessType access;

    /**
     * Unique name
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getName() {
        return name;
    }

    /**
     * Sets the value of the name property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     * @see #getName()
     */
    public void setName(String value) {
        this.name = value;
    }

    /**
     * Element name for display purposes. Typically a few words providing a more detailed and/or user-friendly name than the spirit:name.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getDisplayName() {
        return displayName;
    }

    /**
     * Sets the value of the displayName property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     * @see #getDisplayName()
     */
    public void setDisplayName(String value) {
        this.displayName = value;
    }

    /**
     * Full description string, typically for documentation
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getDescription() {
        return description;
    }

    /**
     * Sets the value of the description property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     * @see #getDescription()
     */
    public void setDescription(String value) {
        this.description = value;
    }

    /**
     * Defines a port whose type resolves to simple bits.
     * 
     * @return
     *     possible object is
     *     {@link PortWireType }
     *     
     */
    public PortWireType getWire() {
        return wire;
    }

    /**
     * Sets the value of the wire property.
     * 
     * @param value
     *     allowed object is
     *     {@link PortWireType }
     *     
     * @see #getWire()
     */
    public void setWire(PortWireType value) {
        this.wire = value;
    }

    /**
     * Defines a port that implements or uses a service that can be implemented with functions or methods.
     * 
     * @return
     *     possible object is
     *     {@link PortTransactionalType }
     *     
     */
    public PortTransactionalType getTransactional() {
        return transactional;
    }

    /**
     * Sets the value of the transactional property.
     * 
     * @param value
     *     allowed object is
     *     {@link PortTransactionalType }
     *     
     * @see #getTransactional()
     */
    public void setTransactional(PortTransactionalType value) {
        this.transactional = value;
    }

    /**
     * Port access characteristics.
     * 
     * @return
     *     possible object is
     *     {@link PortAccessType }
     *     
     */
    public PortAccessType getAccess() {
        return access;
    }

    /**
     * Sets the value of the access property.
     * 
     * @param value
     *     allowed object is
     *     {@link PortAccessType }
     *     
     * @see #getAccess()
     */
    public void setAccess(PortAccessType value) {
        this.access = value;
    }

}
