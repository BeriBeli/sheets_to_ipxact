//
// This file was generated by the Eclipse Implementation of JAXB, v4.0.5 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
//


package org.ieee.ipxact.v2009;

import java.util.ArrayList;
import java.util.List;
import jakarta.xml.bind.annotation.XmlAccessType;
import jakarta.xml.bind.annotation.XmlAccessorType;
import jakarta.xml.bind.annotation.XmlAttribute;
import jakarta.xml.bind.annotation.XmlElement;
import jakarta.xml.bind.annotation.XmlElements;
import jakarta.xml.bind.annotation.XmlRootElement;
import jakarta.xml.bind.annotation.XmlSchemaType;
import jakarta.xml.bind.annotation.XmlType;
import jakarta.xml.bind.annotation.adapters.CollapsedStringAdapter;
import jakarta.xml.bind.annotation.adapters.XmlJavaTypeAdapter;


/**
 * <p>Java class for anonymous complex type</p>.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.</p>
 * 
 * <pre>{@code
 * <complexType>
 *   <complexContent>
 *     <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       <sequence>
 *         <group ref="{http://www.spiritconsortium.org/XMLSchema/SPIRIT/1685-2009}versionedIdentifier"/>
 *         <choice maxOccurs="unbounded">
 *           <element name="generatorChainSelector">
 *             <complexType>
 *               <complexContent>
 *                 <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                   <choice>
 *                     <element ref="{http://www.spiritconsortium.org/XMLSchema/SPIRIT/1685-2009}groupSelector"/>
 *                     <element name="generatorChainRef" type="{http://www.spiritconsortium.org/XMLSchema/SPIRIT/1685-2009}libraryRefType"/>
 *                   </choice>
 *                   <attribute name="unique" type="{http://www.w3.org/2001/XMLSchema}boolean" default="false" />
 *                 </restriction>
 *               </complexContent>
 *             </complexType>
 *           </element>
 *           <element name="componentGeneratorSelector" type="{http://www.spiritconsortium.org/XMLSchema/SPIRIT/1685-2009}generatorSelectorType"/>
 *           <element ref="{http://www.spiritconsortium.org/XMLSchema/SPIRIT/1685-2009}generator"/>
 *         </choice>
 *         <element name="chainGroup" type="{http://www.w3.org/2001/XMLSchema}Name" maxOccurs="unbounded" minOccurs="0"/>
 *         <element ref="{http://www.spiritconsortium.org/XMLSchema/SPIRIT/1685-2009}displayName" minOccurs="0"/>
 *         <element ref="{http://www.spiritconsortium.org/XMLSchema/SPIRIT/1685-2009}description" minOccurs="0"/>
 *         <element ref="{http://www.spiritconsortium.org/XMLSchema/SPIRIT/1685-2009}choices" minOccurs="0"/>
 *         <element ref="{http://www.spiritconsortium.org/XMLSchema/SPIRIT/1685-2009}vendorExtensions" minOccurs="0"/>
 *       </sequence>
 *       <attribute name="hidden" type="{http://www.w3.org/2001/XMLSchema}boolean" default="false" />
 *     </restriction>
 *   </complexContent>
 * </complexType>
 * }</pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "vendor",
    "library",
    "name",
    "version",
    "generatorChainSelectorOrComponentGeneratorSelectorOrGenerator",
    "chainGroup",
    "displayName",
    "description",
    "choices",
    "vendorExtensions"
})
@XmlRootElement(name = "generatorChain")
public class GeneratorChain {

    /**
     * Name of the vendor who supplies this file.
     * 
     */
    @XmlElement(required = true)
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    @XmlSchemaType(name = "Name")
    protected String vendor;
    /**
     * Name of the logical library this element belongs to.
     * 
     */
    @XmlElement(required = true)
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    @XmlSchemaType(name = "Name")
    protected String library;
    /**
     * The name of the object.
     * 
     */
    @XmlElement(required = true)
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    @XmlSchemaType(name = "NMTOKEN")
    protected String name;
    /**
     * Indicates the version of the named element.
     * 
     */
    @XmlElement(required = true)
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    @XmlSchemaType(name = "NMTOKEN")
    protected String version;
    @XmlElements({
        @XmlElement(name = "generatorChainSelector", type = GeneratorChain.GeneratorChainSelector.class),
        @XmlElement(name = "componentGeneratorSelector", type = GeneratorSelectorType.class),
        @XmlElement(name = "generator", type = Generator.class)
    })
    protected List<Object> generatorChainSelectorOrComponentGeneratorSelectorOrGenerator;
    /**
     * Identifies this generator chain as belonging to the named group. This is used by other generator chains to select this chain for programmatic inclusion.
     * 
     */
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    @XmlSchemaType(name = "Name")
    protected List<String> chainGroup;
    /**
     * Element name for display purposes. Typically a few words providing a more detailed and/or user-friendly name than the spirit:name.
     * 
     */
    protected String displayName;
    /**
     * Full description string, typically for documentation
     * 
     */
    protected String description;
    /**
     * Choices used by elements with an attribute spirit:choiceRef.
     * 
     */
    protected Choices choices;
    /**
     * Container for vendor specific extensions.
     * 
     */
    protected VendorExtensions vendorExtensions;
    /**
     * If this attribute is true then the generator should not be presented to the user, it may be part of a chain and has no useful meaning when invoked standalone.
     * 
     */
    @XmlAttribute(name = "hidden", namespace = "http://www.spiritconsortium.org/XMLSchema/SPIRIT/1685-2009")
    protected Boolean hidden;

    /**
     * Name of the vendor who supplies this file.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getVendor() {
        return vendor;
    }

    /**
     * Sets the value of the vendor property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     * @see #getVendor()
     */
    public void setVendor(String value) {
        this.vendor = value;
    }

    /**
     * Name of the logical library this element belongs to.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getLibrary() {
        return library;
    }

    /**
     * Sets the value of the library property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     * @see #getLibrary()
     */
    public void setLibrary(String value) {
        this.library = value;
    }

    /**
     * The name of the object.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getName() {
        return name;
    }

    /**
     * Sets the value of the name property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     * @see #getName()
     */
    public void setName(String value) {
        this.name = value;
    }

    /**
     * Indicates the version of the named element.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getVersion() {
        return version;
    }

    /**
     * Sets the value of the version property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     * @see #getVersion()
     */
    public void setVersion(String value) {
        this.version = value;
    }

    /**
     * Gets the value of the generatorChainSelectorOrComponentGeneratorSelectorOrGenerator property.
     * 
     * <p>This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the generatorChainSelectorOrComponentGeneratorSelectorOrGenerator property.</p>
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * </p>
     * <pre>
     * getGeneratorChainSelectorOrComponentGeneratorSelectorOrGenerator().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Generator }
     * {@link GeneratorChain.GeneratorChainSelector }
     * {@link GeneratorSelectorType }
     * </p>
     * 
     * 
     * @return
     *     The value of the generatorChainSelectorOrComponentGeneratorSelectorOrGenerator property.
     */
    public List<Object> getGeneratorChainSelectorOrComponentGeneratorSelectorOrGenerator() {
        if (generatorChainSelectorOrComponentGeneratorSelectorOrGenerator == null) {
            generatorChainSelectorOrComponentGeneratorSelectorOrGenerator = new ArrayList<>();
        }
        return this.generatorChainSelectorOrComponentGeneratorSelectorOrGenerator;
    }

    /**
     * Identifies this generator chain as belonging to the named group. This is used by other generator chains to select this chain for programmatic inclusion.
     * 
     * Gets the value of the chainGroup property.
     * 
     * <p>This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the chainGroup property.</p>
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * </p>
     * <pre>
     * getChainGroup().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link String }
     * </p>
     * 
     * 
     * @return
     *     The value of the chainGroup property.
     */
    public List<String> getChainGroup() {
        if (chainGroup == null) {
            chainGroup = new ArrayList<>();
        }
        return this.chainGroup;
    }

    /**
     * Element name for display purposes. Typically a few words providing a more detailed and/or user-friendly name than the spirit:name.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getDisplayName() {
        return displayName;
    }

    /**
     * Sets the value of the displayName property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     * @see #getDisplayName()
     */
    public void setDisplayName(String value) {
        this.displayName = value;
    }

    /**
     * Full description string, typically for documentation
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getDescription() {
        return description;
    }

    /**
     * Sets the value of the description property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     * @see #getDescription()
     */
    public void setDescription(String value) {
        this.description = value;
    }

    /**
     * Choices used by elements with an attribute spirit:choiceRef.
     * 
     * @return
     *     possible object is
     *     {@link Choices }
     *     
     */
    public Choices getChoices() {
        return choices;
    }

    /**
     * Sets the value of the choices property.
     * 
     * @param value
     *     allowed object is
     *     {@link Choices }
     *     
     * @see #getChoices()
     */
    public void setChoices(Choices value) {
        this.choices = value;
    }

    /**
     * Container for vendor specific extensions.
     * 
     * @return
     *     possible object is
     *     {@link VendorExtensions }
     *     
     */
    public VendorExtensions getVendorExtensions() {
        return vendorExtensions;
    }

    /**
     * Sets the value of the vendorExtensions property.
     * 
     * @param value
     *     allowed object is
     *     {@link VendorExtensions }
     *     
     * @see #getVendorExtensions()
     */
    public void setVendorExtensions(VendorExtensions value) {
        this.vendorExtensions = value;
    }

    /**
     * If this attribute is true then the generator should not be presented to the user, it may be part of a chain and has no useful meaning when invoked standalone.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public boolean isHidden() {
        if (hidden == null) {
            return false;
        } else {
            return hidden;
        }
    }

    /**
     * Sets the value of the hidden property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     * @see #isHidden()
     */
    public void setHidden(Boolean value) {
        this.hidden = value;
    }


    /**
     * <p>Java class for anonymous complex type</p>.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.</p>
     * 
     * <pre>{@code
     * <complexType>
     *   <complexContent>
     *     <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       <choice>
     *         <element ref="{http://www.spiritconsortium.org/XMLSchema/SPIRIT/1685-2009}groupSelector"/>
     *         <element name="generatorChainRef" type="{http://www.spiritconsortium.org/XMLSchema/SPIRIT/1685-2009}libraryRefType"/>
     *       </choice>
     *       <attribute name="unique" type="{http://www.w3.org/2001/XMLSchema}boolean" default="false" />
     *     </restriction>
     *   </complexContent>
     * </complexType>
     * }</pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "groupSelector",
        "generatorChainRef"
    })
    public static class GeneratorChainSelector {

        /**
         * Specifies a set of group names used to select subsequent generators. The attribute "multipleGroupOperator" specifies the OR or AND selection operator if there is more than one group name (default=OR).
         * 
         */
        protected GroupSelector groupSelector;
        /**
         * Select another generator chain using the unique identifier of this generator chain.
         * 
         */
        protected LibraryRefType generatorChainRef;
        /**
         * Specifies that only a single generator is valid in this context. If more that one generator is selcted based on the selection criteria, DE will prompt the user to resolve to a single generator.
         * 
         */
        @XmlAttribute(name = "unique", namespace = "http://www.spiritconsortium.org/XMLSchema/SPIRIT/1685-2009")
        protected Boolean unique;

        /**
         * Specifies a set of group names used to select subsequent generators. The attribute "multipleGroupOperator" specifies the OR or AND selection operator if there is more than one group name (default=OR).
         * 
         * @return
         *     possible object is
         *     {@link GroupSelector }
         *     
         */
        public GroupSelector getGroupSelector() {
            return groupSelector;
        }

        /**
         * Sets the value of the groupSelector property.
         * 
         * @param value
         *     allowed object is
         *     {@link GroupSelector }
         *     
         * @see #getGroupSelector()
         */
        public void setGroupSelector(GroupSelector value) {
            this.groupSelector = value;
        }

        /**
         * Select another generator chain using the unique identifier of this generator chain.
         * 
         * @return
         *     possible object is
         *     {@link LibraryRefType }
         *     
         */
        public LibraryRefType getGeneratorChainRef() {
            return generatorChainRef;
        }

        /**
         * Sets the value of the generatorChainRef property.
         * 
         * @param value
         *     allowed object is
         *     {@link LibraryRefType }
         *     
         * @see #getGeneratorChainRef()
         */
        public void setGeneratorChainRef(LibraryRefType value) {
            this.generatorChainRef = value;
        }

        /**
         * Specifies that only a single generator is valid in this context. If more that one generator is selcted based on the selection criteria, DE will prompt the user to resolve to a single generator.
         * 
         * @return
         *     possible object is
         *     {@link Boolean }
         *     
         */
        public boolean isUnique() {
            if (unique == null) {
                return false;
            } else {
                return unique;
            }
        }

        /**
         * Sets the value of the unique property.
         * 
         * @param value
         *     allowed object is
         *     {@link Boolean }
         *     
         * @see #isUnique()
         */
        public void setUnique(Boolean value) {
            this.unique = value;
        }

    }

}
