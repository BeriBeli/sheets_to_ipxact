//
// This file was generated by the Eclipse Implementation of JAXB, v4.0.5 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
//


package org.ieee.ipxact.v2009;

import jakarta.xml.bind.annotation.XmlEnum;
import jakarta.xml.bind.annotation.XmlEnumValue;
import jakarta.xml.bind.annotation.XmlType;


/**
 * Determines how a property is resolved.  Immediate means the value is included in the XML document and cannot be changed by the user.  User means the value must be obtained from the user.  Dependent means the value depends on the value of other properties.  A dependency expression must be supplied in the dependency attribute.  Generated means the value will be provided by a generator.
 * 
 * <p>Java class for resolveType</p>.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.</p>
 * <pre>{@code
 * <simpleType name="resolveType">
 *   <restriction base="{http://www.w3.org/2001/XMLSchema}token">
 *     <enumeration value="immediate"/>
 *     <enumeration value="user"/>
 *     <enumeration value="dependent"/>
 *     <enumeration value="generated"/>
 *   </restriction>
 * </simpleType>
 * }</pre>
 * 
 */
@XmlType(name = "resolveType")
@XmlEnum
public enum ResolveType {


    /**
     * Property value is included in the XML file.  It cannot be configured.
     * 
     */
    @XmlEnumValue("immediate")
    IMMEDIATE("immediate"),

    /**
     * Property content can be modified through confiugration.  Modifications will be saved with the design.
     * 
     */
    @XmlEnumValue("user")
    USER("user"),

    /**
     * Property value is expressed as an XPath expression which may refer to other properties.  The expression must appear in the dendency attribute.
     * 
     */
    @XmlEnumValue("dependent")
    DEPENDENT("dependent"),

    /**
     * Generators may modify this property.  Modifications get saved with the design.
     * 
     */
    @XmlEnumValue("generated")
    GENERATED("generated");
    private final String value;

    ResolveType(String v) {
        value = v;
    }

    /**
     * Gets the value associated to the enum constant.
     * 
     * @return
     *     The value linked to the enum.
     */
    public String value() {
        return value;
    }

    /**
     * Gets the enum associated to the value passed as parameter.
     * 
     * @param v
     *     The value to get the enum from.
     * @return
     *     The enum which corresponds to the value, if it exists.
     * @throws IllegalArgumentException
     *     If no value matches in the enum declaration.
     */
    public static ResolveType fromValue(String v) {
        for (ResolveType c: ResolveType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
