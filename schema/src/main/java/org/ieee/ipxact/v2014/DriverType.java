//
// This file was generated by the Eclipse Implementation of JAXB, v4.0.5 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
//


package org.ieee.ipxact.v2014;

import jakarta.xml.bind.annotation.XmlAccessType;
import jakarta.xml.bind.annotation.XmlAccessorType;
import jakarta.xml.bind.annotation.XmlType;


/**
 * Wire port driver type.
 * 
 * <p>Java class for driverType complex type</p>.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.</p>
 * 
 * <pre>{@code
 * <complexType name="driverType">
 *   <complexContent>
 *     <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       <sequence minOccurs="0">
 *         <element ref="{http://www.accellera.org/XMLSchema/IPXACT/1685-2014}range" minOccurs="0"/>
 *         <choice>
 *           <element ref="{http://www.accellera.org/XMLSchema/IPXACT/1685-2014}defaultValue"/>
 *           <element ref="{http://www.accellera.org/XMLSchema/IPXACT/1685-2014}clockDriver"/>
 *           <element ref="{http://www.accellera.org/XMLSchema/IPXACT/1685-2014}singleShotDriver"/>
 *         </choice>
 *       </sequence>
 *     </restriction>
 *   </complexContent>
 * </complexType>
 * }</pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "driverType", propOrder = {
    "range",
    "defaultValue",
    "clockDriver",
    "singleShotDriver"
})
public class DriverType {

    /**
     * Left and right bound of a reference into a vector.
     * 
     */
    protected Range range;
    /**
     * Default value for a wire port.
     * 
     */
    protected UnsignedBitVectorExpression defaultValue;
    /**
     * Describes a driven clock port.
     * 
     */
    protected ClockDriver clockDriver;
    /**
     * Describes a driven one-shot port.
     * 
     */
    protected SingleShotDriver singleShotDriver;

    /**
     * Left and right bound of a reference into a vector.
     * 
     * @return
     *     possible object is
     *     {@link Range }
     *     
     */
    public Range getRange() {
        return range;
    }

    /**
     * Sets the value of the range property.
     * 
     * @param value
     *     allowed object is
     *     {@link Range }
     *     
     * @see #getRange()
     */
    public void setRange(Range value) {
        this.range = value;
    }

    /**
     * Default value for a wire port.
     * 
     * @return
     *     possible object is
     *     {@link UnsignedBitVectorExpression }
     *     
     */
    public UnsignedBitVectorExpression getDefaultValue() {
        return defaultValue;
    }

    /**
     * Sets the value of the defaultValue property.
     * 
     * @param value
     *     allowed object is
     *     {@link UnsignedBitVectorExpression }
     *     
     * @see #getDefaultValue()
     */
    public void setDefaultValue(UnsignedBitVectorExpression value) {
        this.defaultValue = value;
    }

    /**
     * Describes a driven clock port.
     * 
     * @return
     *     possible object is
     *     {@link ClockDriver }
     *     
     */
    public ClockDriver getClockDriver() {
        return clockDriver;
    }

    /**
     * Sets the value of the clockDriver property.
     * 
     * @param value
     *     allowed object is
     *     {@link ClockDriver }
     *     
     * @see #getClockDriver()
     */
    public void setClockDriver(ClockDriver value) {
        this.clockDriver = value;
    }

    /**
     * Describes a driven one-shot port.
     * 
     * @return
     *     possible object is
     *     {@link SingleShotDriver }
     *     
     */
    public SingleShotDriver getSingleShotDriver() {
        return singleShotDriver;
    }

    /**
     * Sets the value of the singleShotDriver property.
     * 
     * @param value
     *     allowed object is
     *     {@link SingleShotDriver }
     *     
     * @see #getSingleShotDriver()
     */
    public void setSingleShotDriver(SingleShotDriver value) {
        this.singleShotDriver = value;
    }

}
