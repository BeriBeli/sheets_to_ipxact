//
// This file was generated by the Eclipse Implementation of JAXB, v4.0.5 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
//


package org.ieee.ipxact.v2014;

import java.util.ArrayList;
import java.util.List;
import jakarta.xml.bind.annotation.XmlAccessType;
import jakarta.xml.bind.annotation.XmlAccessorType;
import jakarta.xml.bind.annotation.XmlAttribute;
import jakarta.xml.bind.annotation.XmlElement;
import jakarta.xml.bind.annotation.XmlID;
import jakarta.xml.bind.annotation.XmlSchemaType;
import jakarta.xml.bind.annotation.XmlType;
import jakarta.xml.bind.annotation.adapters.CollapsedStringAdapter;
import jakarta.xml.bind.annotation.adapters.XmlJavaTypeAdapter;


/**
 * Reference to a whiteboxElement within a view. The 'name' attribute must refer to a whiteboxElement defined within this component.
 * 
 * <p>Java class for whiteboxElementRefType complex type</p>.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.</p>
 * 
 * <pre>{@code
 * <complexType name="whiteboxElementRefType">
 *   <complexContent>
 *     <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       <sequence>
 *         <element ref="{http://www.accellera.org/XMLSchema/IPXACT/1685-2014}isPresent" minOccurs="0"/>
 *         <element name="location" type="{http://www.accellera.org/XMLSchema/IPXACT/1685-2014}slicesType" maxOccurs="unbounded"/>
 *       </sequence>
 *       <attGroup ref="{http://www.accellera.org/XMLSchema/IPXACT/1685-2014}id.att"/>
 *       <attribute name="name" use="required" type="{http://www.w3.org/2001/XMLSchema}Name" />
 *     </restriction>
 *   </complexContent>
 * </complexType>
 * }</pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "whiteboxElementRefType", propOrder = {
    "isPresent",
    "location"
})
public class WhiteboxElementRefType {

    /**
     * Expression that determines whether the enclosing element should be treated as present (expression evaluates to "true") or disregarded (expression evalutes to "false")
     * 
     */
    protected UnsignedBitExpression isPresent;
    /**
     * The contents of each location element can be used to specified one location (HDL Path) through the referenced whiteBoxElement is accessible.
     * 
     */
    @XmlElement(required = true)
    protected List<SlicesType> location;
    /**
     * Reference to a whiteboxElement defined within this component.
     * 
     */
    @XmlAttribute(name = "name", required = true)
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    @XmlSchemaType(name = "Name")
    protected String name;
    /**
     * A generic mechanism for annotating elements with unique identifiers. See: http://www.w3.org/TR/xml-id/ for more information.
     * 
     */
    @XmlAttribute(name = "id", namespace = "http://www.w3.org/XML/1998/namespace")
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    @XmlID
    @XmlSchemaType(name = "ID")
    protected String id;

    /**
     * Expression that determines whether the enclosing element should be treated as present (expression evaluates to "true") or disregarded (expression evalutes to "false")
     * 
     * @return
     *     possible object is
     *     {@link UnsignedBitExpression }
     *     
     */
    public UnsignedBitExpression getIsPresent() {
        return isPresent;
    }

    /**
     * Sets the value of the isPresent property.
     * 
     * @param value
     *     allowed object is
     *     {@link UnsignedBitExpression }
     *     
     * @see #getIsPresent()
     */
    public void setIsPresent(UnsignedBitExpression value) {
        this.isPresent = value;
    }

    /**
     * The contents of each location element can be used to specified one location (HDL Path) through the referenced whiteBoxElement is accessible.
     * 
     * Gets the value of the location property.
     * 
     * <p>This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the location property.</p>
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * </p>
     * <pre>
     * getLocation().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link SlicesType }
     * </p>
     * 
     * 
     * @return
     *     The value of the location property.
     */
    public List<SlicesType> getLocation() {
        if (location == null) {
            location = new ArrayList<>();
        }
        return this.location;
    }

    /**
     * Reference to a whiteboxElement defined within this component.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getName() {
        return name;
    }

    /**
     * Sets the value of the name property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     * @see #getName()
     */
    public void setName(String value) {
        this.name = value;
    }

    /**
     * A generic mechanism for annotating elements with unique identifiers. See: http://www.w3.org/TR/xml-id/ for more information.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getId() {
        return id;
    }

    /**
     * Sets the value of the id property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     * @see #getId()
     */
    public void setId(String value) {
        this.id = value;
    }

}
