//
// This file was generated by the Eclipse Implementation of JAXB, v4.0.5 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
//


package org.ieee.ipxact.v2022;

import jakarta.xml.bind.annotation.XmlAccessType;
import jakarta.xml.bind.annotation.XmlAccessorType;
import jakarta.xml.bind.annotation.XmlAttribute;
import jakarta.xml.bind.annotation.XmlElement;
import jakarta.xml.bind.annotation.XmlID;
import jakarta.xml.bind.annotation.XmlSchemaType;
import jakarta.xml.bind.annotation.XmlType;
import jakarta.xml.bind.annotation.adapters.CollapsedStringAdapter;
import jakarta.xml.bind.annotation.adapters.XmlJavaTypeAdapter;


/**
 * A port description, giving a name and an access type for high level ports.
 * 
 * <p>Java class for subPortType complex type</p>.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.</p>
 * 
 * <pre>{@code
 * <complexType name="subPortType">
 *   <complexContent>
 *     <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       <sequence>
 *         <group ref="{http://www.accellera.org/XMLSchema/IPXACT/1685-2022}nameGroupPort"/>
 *         <choice>
 *           <element name="wire" type="{http://www.accellera.org/XMLSchema/IPXACT/1685-2022}portWireType"/>
 *           <element name="structured" type="{http://www.accellera.org/XMLSchema/IPXACT/1685-2022}portStructuredType"/>
 *         </choice>
 *         <element ref="{http://www.accellera.org/XMLSchema/IPXACT/1685-2022}arrays" minOccurs="0"/>
 *         <element name="access" type="{http://www.accellera.org/XMLSchema/IPXACT/1685-2022}portAccessType" minOccurs="0"/>
 *         <element ref="{http://www.accellera.org/XMLSchema/IPXACT/1685-2022}vendorExtensions" minOccurs="0"/>
 *       </sequence>
 *       <attGroup ref="{http://www.accellera.org/XMLSchema/IPXACT/1685-2022}id.att"/>
 *       <attribute name="isIO" type="{http://www.w3.org/2001/XMLSchema}boolean" />
 *     </restriction>
 *   </complexContent>
 * </complexType>
 * }</pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "subPortType", propOrder = {
    "name",
    "displayName",
    "shortDescription",
    "description",
    "wire",
    "structured",
    "arrays",
    "access",
    "vendorExtensions"
})
public class SubPortType {

    /**
     * Unique name
     * 
     */
    @XmlElement(required = true)
    protected String name;
    /**
     * Element name for display purposes. Typically a few words providing a more detailed and/or user-friendly name than the ipxact:name.
     * 
     */
    protected String displayName;
    /**
     * Brief description suitable for titles, software comments and pop-up windows. Being a SystemVerilog expression the text can be constructed using parameters, e.g, by concatentation or $sformatf().
     * 
     */
    protected String shortDescription;
    /**
     * Full description string, typically for documentation
     * 
     */
    protected String description;
    /**
     * Defines a port whose type resolves to simple bits.
     * 
     */
    protected PortWireType wire;
    protected PortStructuredType structured;
    protected Arrays arrays;
    /**
     * Port access characteristics.
     * 
     */
    protected PortAccessType access;
    /**
     * Container for vendor specific extensions.
     * 
     */
    protected VendorExtensions vendorExtensions;
    /**
     * When present and set to 'true' identifies this port as being an I/O to the containing structure port type.  Only valid for subPorts contained in a structured port with structType='interface'.
     * 
     */
    @XmlAttribute(name = "isIO")
    protected Boolean isIO;
    /**
     * A generic mechanism for annotating elements with unique identifiers. See: http://www.w3.org/TR/xml-id/ for more information.
     * 
     */
    @XmlAttribute(name = "id", namespace = "http://www.w3.org/XML/1998/namespace")
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    @XmlID
    @XmlSchemaType(name = "ID")
    protected String id;

    /**
     * Unique name
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getName() {
        return name;
    }

    /**
     * Sets the value of the name property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     * @see #getName()
     */
    public void setName(String value) {
        this.name = value;
    }

    /**
     * Element name for display purposes. Typically a few words providing a more detailed and/or user-friendly name than the ipxact:name.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getDisplayName() {
        return displayName;
    }

    /**
     * Sets the value of the displayName property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     * @see #getDisplayName()
     */
    public void setDisplayName(String value) {
        this.displayName = value;
    }

    /**
     * Brief description suitable for titles, software comments and pop-up windows. Being a SystemVerilog expression the text can be constructed using parameters, e.g, by concatentation or $sformatf().
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getShortDescription() {
        return shortDescription;
    }

    /**
     * Sets the value of the shortDescription property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     * @see #getShortDescription()
     */
    public void setShortDescription(String value) {
        this.shortDescription = value;
    }

    /**
     * Full description string, typically for documentation
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getDescription() {
        return description;
    }

    /**
     * Sets the value of the description property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     * @see #getDescription()
     */
    public void setDescription(String value) {
        this.description = value;
    }

    /**
     * Defines a port whose type resolves to simple bits.
     * 
     * @return
     *     possible object is
     *     {@link PortWireType }
     *     
     */
    public PortWireType getWire() {
        return wire;
    }

    /**
     * Sets the value of the wire property.
     * 
     * @param value
     *     allowed object is
     *     {@link PortWireType }
     *     
     * @see #getWire()
     */
    public void setWire(PortWireType value) {
        this.wire = value;
    }

    /**
     * Gets the value of the structured property.
     * 
     * @return
     *     possible object is
     *     {@link PortStructuredType }
     *     
     */
    public PortStructuredType getStructured() {
        return structured;
    }

    /**
     * Sets the value of the structured property.
     * 
     * @param value
     *     allowed object is
     *     {@link PortStructuredType }
     *     
     */
    public void setStructured(PortStructuredType value) {
        this.structured = value;
    }

    /**
     * Gets the value of the arrays property.
     * 
     * @return
     *     possible object is
     *     {@link Arrays }
     *     
     */
    public Arrays getArrays() {
        return arrays;
    }

    /**
     * Sets the value of the arrays property.
     * 
     * @param value
     *     allowed object is
     *     {@link Arrays }
     *     
     */
    public void setArrays(Arrays value) {
        this.arrays = value;
    }

    /**
     * Port access characteristics.
     * 
     * @return
     *     possible object is
     *     {@link PortAccessType }
     *     
     */
    public PortAccessType getAccess() {
        return access;
    }

    /**
     * Sets the value of the access property.
     * 
     * @param value
     *     allowed object is
     *     {@link PortAccessType }
     *     
     * @see #getAccess()
     */
    public void setAccess(PortAccessType value) {
        this.access = value;
    }

    /**
     * Container for vendor specific extensions.
     * 
     * @return
     *     possible object is
     *     {@link VendorExtensions }
     *     
     */
    public VendorExtensions getVendorExtensions() {
        return vendorExtensions;
    }

    /**
     * Sets the value of the vendorExtensions property.
     * 
     * @param value
     *     allowed object is
     *     {@link VendorExtensions }
     *     
     * @see #getVendorExtensions()
     */
    public void setVendorExtensions(VendorExtensions value) {
        this.vendorExtensions = value;
    }

    /**
     * When present and set to 'true' identifies this port as being an I/O to the containing structure port type.  Only valid for subPorts contained in a structured port with structType='interface'.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isIsIO() {
        return isIO;
    }

    /**
     * Sets the value of the isIO property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     * @see #isIsIO()
     */
    public void setIsIO(Boolean value) {
        this.isIO = value;
    }

    /**
     * A generic mechanism for annotating elements with unique identifiers. See: http://www.w3.org/TR/xml-id/ for more information.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getId() {
        return id;
    }

    /**
     * Sets the value of the id property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     * @see #getId()
     */
    public void setId(String value) {
        this.id = value;
    }

}
