//
// This file was generated by the Eclipse Implementation of JAXB, v4.0.5 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
//


package org.ieee.ipxact.v2022;

import java.util.ArrayList;
import java.util.List;
import jakarta.xml.bind.annotation.XmlAccessType;
import jakarta.xml.bind.annotation.XmlAccessorType;
import jakarta.xml.bind.annotation.XmlAttribute;
import jakarta.xml.bind.annotation.XmlElement;
import jakarta.xml.bind.annotation.XmlID;
import jakarta.xml.bind.annotation.XmlRootElement;
import jakarta.xml.bind.annotation.XmlSchemaType;
import jakarta.xml.bind.annotation.XmlType;
import jakarta.xml.bind.annotation.adapters.CollapsedStringAdapter;
import jakarta.xml.bind.annotation.adapters.XmlJavaTypeAdapter;


/**
 * <p>Java class for anonymous complex type</p>.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.</p>
 * 
 * <pre>{@code
 * <complexType>
 *   <complexContent>
 *     <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       <sequence>
 *         <element name="viewLink" maxOccurs="unbounded">
 *           <complexType>
 *             <complexContent>
 *               <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                 <sequence>
 *                   <element name="externalViewReference">
 *                     <complexType>
 *                       <complexContent>
 *                         <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                           <attribute name="viewRef" use="required" type="{http://www.w3.org/2001/XMLSchema}Name" />
 *                         </restriction>
 *                       </complexContent>
 *                     </complexType>
 *                   </element>
 *                   <element name="viewReference">
 *                     <complexType>
 *                       <complexContent>
 *                         <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                           <attribute name="viewRef" use="required" type="{http://www.w3.org/2001/XMLSchema}Name" />
 *                         </restriction>
 *                       </complexContent>
 *                     </complexType>
 *                   </element>
 *                   <element ref="{http://www.accellera.org/XMLSchema/IPXACT/1685-2022}vendorExtensions" minOccurs="0"/>
 *                 </sequence>
 *                 <attGroup ref="{http://www.accellera.org/XMLSchema/IPXACT/1685-2022}id.att"/>
 *               </restriction>
 *             </complexContent>
 *           </complexType>
 *         </element>
 *       </sequence>
 *     </restriction>
 *   </complexContent>
 * </complexType>
 * }</pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "viewLink"
})
@XmlRootElement(name = "viewLinks")
public class ViewLinks {

    /**
     * A link between one external view and one internal view.
     * 
     */
    @XmlElement(required = true)
    protected List<ViewLinks.ViewLink> viewLink;

    /**
     * A link between one external view and one internal view.
     * 
     * Gets the value of the viewLink property.
     * 
     * <p>This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the viewLink property.</p>
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * </p>
     * <pre>
     * getViewLink().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link ViewLinks.ViewLink }
     * </p>
     * 
     * 
     * @return
     *     The value of the viewLink property.
     */
    public List<ViewLinks.ViewLink> getViewLink() {
        if (viewLink == null) {
            viewLink = new ArrayList<>();
        }
        return this.viewLink;
    }


    /**
     * <p>Java class for anonymous complex type</p>.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.</p>
     * 
     * <pre>{@code
     * <complexType>
     *   <complexContent>
     *     <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       <sequence>
     *         <element name="externalViewReference">
     *           <complexType>
     *             <complexContent>
     *               <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *                 <attribute name="viewRef" use="required" type="{http://www.w3.org/2001/XMLSchema}Name" />
     *               </restriction>
     *             </complexContent>
     *           </complexType>
     *         </element>
     *         <element name="viewReference">
     *           <complexType>
     *             <complexContent>
     *               <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *                 <attribute name="viewRef" use="required" type="{http://www.w3.org/2001/XMLSchema}Name" />
     *               </restriction>
     *             </complexContent>
     *           </complexType>
     *         </element>
     *         <element ref="{http://www.accellera.org/XMLSchema/IPXACT/1685-2022}vendorExtensions" minOccurs="0"/>
     *       </sequence>
     *       <attGroup ref="{http://www.accellera.org/XMLSchema/IPXACT/1685-2022}id.att"/>
     *     </restriction>
     *   </complexContent>
     * </complexType>
     * }</pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "externalViewReference",
        "viewReference",
        "vendorExtensions"
    })
    public static class ViewLink {

        /**
         * Reference to a view defined in the linked external type definitions.
         * 
         */
        @XmlElement(required = true)
        protected ViewLinks.ViewLink.ExternalViewReference externalViewReference;
        /**
         * Reference to a view defined internally.
         * 
         */
        @XmlElement(required = true)
        protected ViewLinks.ViewLink.ViewReference viewReference;
        /**
         * Container for vendor specific extensions.
         * 
         */
        protected VendorExtensions vendorExtensions;
        /**
         * A generic mechanism for annotating elements with unique identifiers. See: http://www.w3.org/TR/xml-id/ for more information.
         * 
         */
        @XmlAttribute(name = "id", namespace = "http://www.w3.org/XML/1998/namespace")
        @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
        @XmlID
        @XmlSchemaType(name = "ID")
        protected String id;

        /**
         * Reference to a view defined in the linked external type definitions.
         * 
         * @return
         *     possible object is
         *     {@link ViewLinks.ViewLink.ExternalViewReference }
         *     
         */
        public ViewLinks.ViewLink.ExternalViewReference getExternalViewReference() {
            return externalViewReference;
        }

        /**
         * Sets the value of the externalViewReference property.
         * 
         * @param value
         *     allowed object is
         *     {@link ViewLinks.ViewLink.ExternalViewReference }
         *     
         * @see #getExternalViewReference()
         */
        public void setExternalViewReference(ViewLinks.ViewLink.ExternalViewReference value) {
            this.externalViewReference = value;
        }

        /**
         * Reference to a view defined internally.
         * 
         * @return
         *     possible object is
         *     {@link ViewLinks.ViewLink.ViewReference }
         *     
         */
        public ViewLinks.ViewLink.ViewReference getViewReference() {
            return viewReference;
        }

        /**
         * Sets the value of the viewReference property.
         * 
         * @param value
         *     allowed object is
         *     {@link ViewLinks.ViewLink.ViewReference }
         *     
         * @see #getViewReference()
         */
        public void setViewReference(ViewLinks.ViewLink.ViewReference value) {
            this.viewReference = value;
        }

        /**
         * Container for vendor specific extensions.
         * 
         * @return
         *     possible object is
         *     {@link VendorExtensions }
         *     
         */
        public VendorExtensions getVendorExtensions() {
            return vendorExtensions;
        }

        /**
         * Sets the value of the vendorExtensions property.
         * 
         * @param value
         *     allowed object is
         *     {@link VendorExtensions }
         *     
         * @see #getVendorExtensions()
         */
        public void setVendorExtensions(VendorExtensions value) {
            this.vendorExtensions = value;
        }

        /**
         * A generic mechanism for annotating elements with unique identifiers. See: http://www.w3.org/TR/xml-id/ for more information.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getId() {
            return id;
        }

        /**
         * Sets the value of the id property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         * @see #getId()
         */
        public void setId(String value) {
            this.id = value;
        }


        /**
         * <p>Java class for anonymous complex type</p>.
         * 
         * <p>The following schema fragment specifies the expected content contained within this class.</p>
         * 
         * <pre>{@code
         * <complexType>
         *   <complexContent>
         *     <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
         *       <attribute name="viewRef" use="required" type="{http://www.w3.org/2001/XMLSchema}Name" />
         *     </restriction>
         *   </complexContent>
         * </complexType>
         * }</pre>
         * 
         * 
         */
        @XmlAccessorType(XmlAccessType.FIELD)
        @XmlType(name = "")
        public static class ExternalViewReference {

            /**
             * Reference to a specific view.
             * 
             */
            @XmlAttribute(name = "viewRef", required = true)
            @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
            @XmlSchemaType(name = "Name")
            protected String viewRef;

            /**
             * Reference to a specific view.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getViewRef() {
                return viewRef;
            }

            /**
             * Sets the value of the viewRef property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             * @see #getViewRef()
             */
            public void setViewRef(String value) {
                this.viewRef = value;
            }

        }


        /**
         * <p>Java class for anonymous complex type</p>.
         * 
         * <p>The following schema fragment specifies the expected content contained within this class.</p>
         * 
         * <pre>{@code
         * <complexType>
         *   <complexContent>
         *     <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
         *       <attribute name="viewRef" use="required" type="{http://www.w3.org/2001/XMLSchema}Name" />
         *     </restriction>
         *   </complexContent>
         * </complexType>
         * }</pre>
         * 
         * 
         */
        @XmlAccessorType(XmlAccessType.FIELD)
        @XmlType(name = "")
        public static class ViewReference {

            /**
             * Reference to a specific view.
             * 
             */
            @XmlAttribute(name = "viewRef", required = true)
            @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
            @XmlSchemaType(name = "Name")
            protected String viewRef;

            /**
             * Reference to a specific view.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getViewRef() {
                return viewRef;
            }

            /**
             * Sets the value of the viewRef property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             * @see #getViewRef()
             */
            public void setViewRef(String value) {
                this.viewRef = value;
            }

        }

    }

}
