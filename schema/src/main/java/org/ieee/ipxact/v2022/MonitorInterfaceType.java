//
// This file was generated by the Eclipse Implementation of JAXB, v4.0.5 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
//


package org.ieee.ipxact.v2022;

import jakarta.xml.bind.annotation.XmlAccessType;
import jakarta.xml.bind.annotation.XmlAccessorType;
import jakarta.xml.bind.annotation.XmlAttribute;
import jakarta.xml.bind.annotation.XmlType;


/**
 * Hierarchical reference to an interface being monitored or monitoring another interface.
 * 
 * <p>Java class for monitorInterfaceType complex type</p>.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.</p>
 * 
 * <pre>{@code
 * <complexType name="monitorInterfaceType">
 *   <complexContent>
 *     <extension base="{http://www.accellera.org/XMLSchema/IPXACT/1685-2022}interfaceType">
 *       <sequence>
 *         <element ref="{http://www.accellera.org/XMLSchema/IPXACT/1685-2022}description" minOccurs="0"/>
 *         <element ref="{http://www.accellera.org/XMLSchema/IPXACT/1685-2022}vendorExtensions" minOccurs="0"/>
 *       </sequence>
 *       <attribute name="path" type="{http://www.accellera.org/XMLSchema/IPXACT/1685-2022}instancePath" />
 *     </extension>
 *   </complexContent>
 * </complexType>
 * }</pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "monitorInterfaceType", propOrder = {
    "description",
    "vendorExtensions"
})
public class MonitorInterfaceType
    extends InterfaceType
{

    /**
     * Full description string, typically for documentation
     * 
     */
    protected String description;
    /**
     * Container for vendor specific extensions.
     * 
     */
    protected VendorExtensions vendorExtensions;
    /**
     * A decending hierarchical (slash separated - example x/y/z) path to the component instance containing the specified component instance in componentInterfaceRef. If not specified the componentInterfaceRef instance shall exist in the current design.
     * 
     */
    @XmlAttribute(name = "path")
    protected String path;

    /**
     * Full description string, typically for documentation
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getDescription() {
        return description;
    }

    /**
     * Sets the value of the description property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     * @see #getDescription()
     */
    public void setDescription(String value) {
        this.description = value;
    }

    /**
     * Container for vendor specific extensions.
     * 
     * @return
     *     possible object is
     *     {@link VendorExtensions }
     *     
     */
    public VendorExtensions getVendorExtensions() {
        return vendorExtensions;
    }

    /**
     * Sets the value of the vendorExtensions property.
     * 
     * @param value
     *     allowed object is
     *     {@link VendorExtensions }
     *     
     * @see #getVendorExtensions()
     */
    public void setVendorExtensions(VendorExtensions value) {
        this.vendorExtensions = value;
    }

    /**
     * A decending hierarchical (slash separated - example x/y/z) path to the component instance containing the specified component instance in componentInterfaceRef. If not specified the componentInterfaceRef instance shall exist in the current design.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getPath() {
        return path;
    }

    /**
     * Sets the value of the path property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     * @see #getPath()
     */
    public void setPath(String value) {
        this.path = value;
    }

}
