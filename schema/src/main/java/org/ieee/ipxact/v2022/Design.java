//
// This file was generated by the Eclipse Implementation of JAXB, v4.0.5 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
//


package org.ieee.ipxact.v2022;

import jakarta.xml.bind.annotation.XmlAccessType;
import jakarta.xml.bind.annotation.XmlAccessorType;
import jakarta.xml.bind.annotation.XmlAttribute;
import jakarta.xml.bind.annotation.XmlElement;
import jakarta.xml.bind.annotation.XmlID;
import jakarta.xml.bind.annotation.XmlRootElement;
import jakarta.xml.bind.annotation.XmlSchemaType;
import jakarta.xml.bind.annotation.XmlType;
import jakarta.xml.bind.annotation.adapters.CollapsedStringAdapter;
import jakarta.xml.bind.annotation.adapters.XmlJavaTypeAdapter;


/**
 * <p>Java class for anonymous complex type</p>.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.</p>
 * 
 * <pre>{@code
 * <complexType>
 *   <complexContent>
 *     <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       <sequence>
 *         <group ref="{http://www.accellera.org/XMLSchema/IPXACT/1685-2022}documentNameGroup"/>
 *         <element ref="{http://www.accellera.org/XMLSchema/IPXACT/1685-2022}componentInstances" minOccurs="0"/>
 *         <element ref="{http://www.accellera.org/XMLSchema/IPXACT/1685-2022}interconnections" minOccurs="0"/>
 *         <element ref="{http://www.accellera.org/XMLSchema/IPXACT/1685-2022}adHocConnections" minOccurs="0"/>
 *         <element ref="{http://www.accellera.org/XMLSchema/IPXACT/1685-2022}choices" minOccurs="0"/>
 *         <element ref="{http://www.accellera.org/XMLSchema/IPXACT/1685-2022}parameters" minOccurs="0"/>
 *         <element ref="{http://www.accellera.org/XMLSchema/IPXACT/1685-2022}assertions" minOccurs="0"/>
 *         <element ref="{http://www.accellera.org/XMLSchema/IPXACT/1685-2022}vendorExtensions" minOccurs="0"/>
 *       </sequence>
 *       <attGroup ref="{http://www.accellera.org/XMLSchema/IPXACT/1685-2022}id.att"/>
 *     </restriction>
 *   </complexContent>
 * </complexType>
 * }</pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "vendor",
    "library",
    "name",
    "version",
    "displayName",
    "shortDescription",
    "description",
    "componentInstances",
    "interconnections",
    "adHocConnections",
    "choices",
    "parameters",
    "assertions",
    "vendorExtensions"
})
@XmlRootElement(name = "design")
public class Design {

    /**
     * Name of the vendor who supplies this file.
     * 
     */
    @XmlElement(required = true)
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    @XmlSchemaType(name = "Name")
    protected String vendor;
    /**
     * Name of the logical library this element belongs to.
     * 
     */
    @XmlElement(required = true)
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    @XmlSchemaType(name = "Name")
    protected String library;
    /**
     * The name of the object.
     * 
     */
    @XmlElement(required = true)
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    @XmlSchemaType(name = "NMTOKEN")
    protected String name;
    /**
     * Indicates the version of the named element.
     * 
     */
    @XmlElement(required = true)
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    @XmlSchemaType(name = "NMTOKEN")
    protected String version;
    /**
     * Name for display purposes. Typically a few words providing a more detailed and/or user-friendly name than the vlnv.
     * 
     */
    protected String displayName;
    /**
     * Brief description suitable for titles, software comments and pop-up windows. Being a SystemVerilog expression the text can be constructed using parameters, e.g, by concatentation or $sformatf().
     * 
     */
    protected String shortDescription;
    /**
     * Full description string, typically for documentation
     * 
     */
    protected String description;
    /**
     * Sub instances of internal components.
     * 
     */
    protected ComponentInstances componentInstances;
    /**
     * Connections between internal sub components.
     * 
     */
    protected Interconnections interconnections;
    /**
     * Defines the set of ad-hoc connections in a design. An ad-hoc connection represents a connection between two component pins which were not connected as a result of interface connections (i.e.the pin to pin connection was made explicitly and is represented explicitly).
     * 
     */
    protected AdHocConnections adHocConnections;
    /**
     * Choices used by elements with an attribute ipxact:choiceRef.
     * 
     */
    protected Choices choices;
    /**
     * A collection of parameters and associated value assertions.
     * 
     */
    protected Parameters parameters;
    /**
     * List of assertions about allowed parameter values.
     * 
     */
    protected Assertions assertions;
    /**
     * Container for vendor specific extensions.
     * 
     */
    protected VendorExtensions vendorExtensions;
    /**
     * A generic mechanism for annotating elements with unique identifiers. See: http://www.w3.org/TR/xml-id/ for more information.
     * 
     */
    @XmlAttribute(name = "id", namespace = "http://www.w3.org/XML/1998/namespace")
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    @XmlID
    @XmlSchemaType(name = "ID")
    protected String id;

    /**
     * Name of the vendor who supplies this file.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getVendor() {
        return vendor;
    }

    /**
     * Sets the value of the vendor property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     * @see #getVendor()
     */
    public void setVendor(String value) {
        this.vendor = value;
    }

    /**
     * Name of the logical library this element belongs to.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getLibrary() {
        return library;
    }

    /**
     * Sets the value of the library property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     * @see #getLibrary()
     */
    public void setLibrary(String value) {
        this.library = value;
    }

    /**
     * The name of the object.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getName() {
        return name;
    }

    /**
     * Sets the value of the name property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     * @see #getName()
     */
    public void setName(String value) {
        this.name = value;
    }

    /**
     * Indicates the version of the named element.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getVersion() {
        return version;
    }

    /**
     * Sets the value of the version property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     * @see #getVersion()
     */
    public void setVersion(String value) {
        this.version = value;
    }

    /**
     * Name for display purposes. Typically a few words providing a more detailed and/or user-friendly name than the vlnv.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getDisplayName() {
        return displayName;
    }

    /**
     * Sets the value of the displayName property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     * @see #getDisplayName()
     */
    public void setDisplayName(String value) {
        this.displayName = value;
    }

    /**
     * Brief description suitable for titles, software comments and pop-up windows. Being a SystemVerilog expression the text can be constructed using parameters, e.g, by concatentation or $sformatf().
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getShortDescription() {
        return shortDescription;
    }

    /**
     * Sets the value of the shortDescription property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     * @see #getShortDescription()
     */
    public void setShortDescription(String value) {
        this.shortDescription = value;
    }

    /**
     * Full description string, typically for documentation
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getDescription() {
        return description;
    }

    /**
     * Sets the value of the description property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     * @see #getDescription()
     */
    public void setDescription(String value) {
        this.description = value;
    }

    /**
     * Sub instances of internal components.
     * 
     * @return
     *     possible object is
     *     {@link ComponentInstances }
     *     
     */
    public ComponentInstances getComponentInstances() {
        return componentInstances;
    }

    /**
     * Sets the value of the componentInstances property.
     * 
     * @param value
     *     allowed object is
     *     {@link ComponentInstances }
     *     
     * @see #getComponentInstances()
     */
    public void setComponentInstances(ComponentInstances value) {
        this.componentInstances = value;
    }

    /**
     * Connections between internal sub components.
     * 
     * @return
     *     possible object is
     *     {@link Interconnections }
     *     
     */
    public Interconnections getInterconnections() {
        return interconnections;
    }

    /**
     * Sets the value of the interconnections property.
     * 
     * @param value
     *     allowed object is
     *     {@link Interconnections }
     *     
     * @see #getInterconnections()
     */
    public void setInterconnections(Interconnections value) {
        this.interconnections = value;
    }

    /**
     * Defines the set of ad-hoc connections in a design. An ad-hoc connection represents a connection between two component pins which were not connected as a result of interface connections (i.e.the pin to pin connection was made explicitly and is represented explicitly).
     * 
     * @return
     *     possible object is
     *     {@link AdHocConnections }
     *     
     */
    public AdHocConnections getAdHocConnections() {
        return adHocConnections;
    }

    /**
     * Sets the value of the adHocConnections property.
     * 
     * @param value
     *     allowed object is
     *     {@link AdHocConnections }
     *     
     * @see #getAdHocConnections()
     */
    public void setAdHocConnections(AdHocConnections value) {
        this.adHocConnections = value;
    }

    /**
     * Choices used by elements with an attribute ipxact:choiceRef.
     * 
     * @return
     *     possible object is
     *     {@link Choices }
     *     
     */
    public Choices getChoices() {
        return choices;
    }

    /**
     * Sets the value of the choices property.
     * 
     * @param value
     *     allowed object is
     *     {@link Choices }
     *     
     * @see #getChoices()
     */
    public void setChoices(Choices value) {
        this.choices = value;
    }

    /**
     * A collection of parameters and associated value assertions.
     * 
     * @return
     *     possible object is
     *     {@link Parameters }
     *     
     */
    public Parameters getParameters() {
        return parameters;
    }

    /**
     * Sets the value of the parameters property.
     * 
     * @param value
     *     allowed object is
     *     {@link Parameters }
     *     
     * @see #getParameters()
     */
    public void setParameters(Parameters value) {
        this.parameters = value;
    }

    /**
     * List of assertions about allowed parameter values.
     * 
     * @return
     *     possible object is
     *     {@link Assertions }
     *     
     */
    public Assertions getAssertions() {
        return assertions;
    }

    /**
     * Sets the value of the assertions property.
     * 
     * @param value
     *     allowed object is
     *     {@link Assertions }
     *     
     * @see #getAssertions()
     */
    public void setAssertions(Assertions value) {
        this.assertions = value;
    }

    /**
     * Container for vendor specific extensions.
     * 
     * @return
     *     possible object is
     *     {@link VendorExtensions }
     *     
     */
    public VendorExtensions getVendorExtensions() {
        return vendorExtensions;
    }

    /**
     * Sets the value of the vendorExtensions property.
     * 
     * @param value
     *     allowed object is
     *     {@link VendorExtensions }
     *     
     * @see #getVendorExtensions()
     */
    public void setVendorExtensions(VendorExtensions value) {
        this.vendorExtensions = value;
    }

    /**
     * A generic mechanism for annotating elements with unique identifiers. See: http://www.w3.org/TR/xml-id/ for more information.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getId() {
        return id;
    }

    /**
     * Sets the value of the id property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     * @see #getId()
     */
    public void setId(String value) {
        this.id = value;
    }

}
