//
// This file was generated by the Eclipse Implementation of JAXB, v4.0.5 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
//


package org.ieee.ipxact.v2022;

import java.util.ArrayList;
import java.util.List;
import jakarta.xml.bind.annotation.XmlAccessType;
import jakarta.xml.bind.annotation.XmlAccessorType;
import jakarta.xml.bind.annotation.XmlAttribute;
import jakarta.xml.bind.annotation.XmlID;
import jakarta.xml.bind.annotation.XmlSchemaType;
import jakarta.xml.bind.annotation.XmlType;
import jakarta.xml.bind.annotation.adapters.CollapsedStringAdapter;
import jakarta.xml.bind.annotation.adapters.XmlJavaTypeAdapter;


/**
 * <p>Java class for accessRestrictionType complex type</p>.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.</p>
 * 
 * <pre>{@code
 * <complexType name="accessRestrictionType">
 *   <complexContent>
 *     <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       <sequence>
 *         <element ref="{http://www.accellera.org/XMLSchema/IPXACT/1685-2022}modeRef" maxOccurs="unbounded" minOccurs="0"/>
 *         <element name="readAccessMask" type="{http://www.accellera.org/XMLSchema/IPXACT/1685-2022}unsignedBitVectorExpression" minOccurs="0"/>
 *         <element name="writeAccessMask" type="{http://www.accellera.org/XMLSchema/IPXACT/1685-2022}unsignedBitVectorExpression" minOccurs="0"/>
 *       </sequence>
 *       <attGroup ref="{http://www.accellera.org/XMLSchema/IPXACT/1685-2022}id.att"/>
 *     </restriction>
 *   </complexContent>
 * </complexType>
 * }</pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "accessRestrictionType", propOrder = {
    "modeRef",
    "readAccessMask",
    "writeAccessMask"
})
public class AccessRestrictionType {

    /**
     * A reference to a mode.
     * 
     */
    protected List<ModeRef> modeRef;
    /**
     * Mask to be anded with the readable bits in this field to determine the readabe bits in this access mode. If not present, the value defaults to "all ones" meaning that read access is not blocked.
     * 
     */
    protected UnsignedBitVectorExpression readAccessMask;
    /**
     * Mask to be anded with the writable bits in this field to determine the writeable bits in this access mode.  If not present, the value defaults to "all ones" meaning that write access is not blocked.
     * 
     */
    protected UnsignedBitVectorExpression writeAccessMask;
    /**
     * A generic mechanism for annotating elements with unique identifiers. See: http://www.w3.org/TR/xml-id/ for more information.
     * 
     */
    @XmlAttribute(name = "id", namespace = "http://www.w3.org/XML/1998/namespace")
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    @XmlID
    @XmlSchemaType(name = "ID")
    protected String id;

    /**
     * A reference to a mode.
     * 
     * Gets the value of the modeRef property.
     * 
     * <p>This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the modeRef property.</p>
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * </p>
     * <pre>
     * getModeRef().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link ModeRef }
     * </p>
     * 
     * 
     * @return
     *     The value of the modeRef property.
     */
    public List<ModeRef> getModeRef() {
        if (modeRef == null) {
            modeRef = new ArrayList<>();
        }
        return this.modeRef;
    }

    /**
     * Mask to be anded with the readable bits in this field to determine the readabe bits in this access mode. If not present, the value defaults to "all ones" meaning that read access is not blocked.
     * 
     * @return
     *     possible object is
     *     {@link UnsignedBitVectorExpression }
     *     
     */
    public UnsignedBitVectorExpression getReadAccessMask() {
        return readAccessMask;
    }

    /**
     * Sets the value of the readAccessMask property.
     * 
     * @param value
     *     allowed object is
     *     {@link UnsignedBitVectorExpression }
     *     
     * @see #getReadAccessMask()
     */
    public void setReadAccessMask(UnsignedBitVectorExpression value) {
        this.readAccessMask = value;
    }

    /**
     * Mask to be anded with the writable bits in this field to determine the writeable bits in this access mode.  If not present, the value defaults to "all ones" meaning that write access is not blocked.
     * 
     * @return
     *     possible object is
     *     {@link UnsignedBitVectorExpression }
     *     
     */
    public UnsignedBitVectorExpression getWriteAccessMask() {
        return writeAccessMask;
    }

    /**
     * Sets the value of the writeAccessMask property.
     * 
     * @param value
     *     allowed object is
     *     {@link UnsignedBitVectorExpression }
     *     
     * @see #getWriteAccessMask()
     */
    public void setWriteAccessMask(UnsignedBitVectorExpression value) {
        this.writeAccessMask = value;
    }

    /**
     * A generic mechanism for annotating elements with unique identifiers. See: http://www.w3.org/TR/xml-id/ for more information.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getId() {
        return id;
    }

    /**
     * Sets the value of the id property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     * @see #getId()
     */
    public void setId(String value) {
        this.id = value;
    }

}
