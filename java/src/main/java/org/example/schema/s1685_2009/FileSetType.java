//
// This file was generated by the Eclipse Implementation of JAXB, v4.0.5 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
//


package org.example.schema.s1685_2009;

import java.math.BigInteger;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.xml.namespace.QName;
import jakarta.xml.bind.annotation.XmlAccessType;
import jakarta.xml.bind.annotation.XmlAccessorType;
import jakarta.xml.bind.annotation.XmlAnyAttribute;
import jakarta.xml.bind.annotation.XmlAttribute;
import jakarta.xml.bind.annotation.XmlElement;
import jakarta.xml.bind.annotation.XmlID;
import jakarta.xml.bind.annotation.XmlIDREF;
import jakarta.xml.bind.annotation.XmlSchemaType;
import jakarta.xml.bind.annotation.XmlType;
import jakarta.xml.bind.annotation.XmlValue;
import jakarta.xml.bind.annotation.adapters.CollapsedStringAdapter;
import jakarta.xml.bind.annotation.adapters.XmlJavaTypeAdapter;


/**
 * <p>Java class for fileSetType complex type</p>.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.</p>
 * 
 * <pre>{@code
 * <complexType name="fileSetType">
 *   <complexContent>
 *     <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       <sequence>
 *         <group ref="{http://www.spiritconsortium.org/XMLSchema/SPIRIT/1685-2009}nameGroup"/>
 *         <element name="group" type="{http://www.w3.org/2001/XMLSchema}Name" maxOccurs="unbounded" minOccurs="0"/>
 *         <element ref="{http://www.spiritconsortium.org/XMLSchema/SPIRIT/1685-2009}file" maxOccurs="unbounded" minOccurs="0"/>
 *         <element name="defaultFileBuilder" type="{http://www.spiritconsortium.org/XMLSchema/SPIRIT/1685-2009}fileBuilderType" maxOccurs="unbounded" minOccurs="0"/>
 *         <element ref="{http://www.spiritconsortium.org/XMLSchema/SPIRIT/1685-2009}dependency" maxOccurs="unbounded" minOccurs="0"/>
 *         <element name="function" maxOccurs="unbounded" minOccurs="0">
 *           <complexType>
 *             <complexContent>
 *               <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                 <sequence>
 *                   <element name="entryPoint" type="{http://www.w3.org/2001/XMLSchema}Name" minOccurs="0"/>
 *                   <element name="fileRef" type="{http://www.w3.org/2001/XMLSchema}IDREF"/>
 *                   <element name="returnType" minOccurs="0">
 *                     <simpleType>
 *                       <restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *                         <enumeration value="void"/>
 *                         <enumeration value="int"/>
 *                       </restriction>
 *                     </simpleType>
 *                   </element>
 *                   <element name="argument" maxOccurs="unbounded" minOccurs="0">
 *                     <complexType>
 *                       <complexContent>
 *                         <extension base="{http://www.spiritconsortium.org/XMLSchema/SPIRIT/1685-2009}nameValuePairType">
 *                           <attribute name="dataType" use="required" type="{http://www.spiritconsortium.org/XMLSchema/SPIRIT/1685-2009}dataTypeType" />
 *                           <anyAttribute processContents='lax'/>
 *                         </extension>
 *                       </complexContent>
 *                     </complexType>
 *                   </element>
 *                   <element name="disabled" minOccurs="0">
 *                     <complexType>
 *                       <simpleContent>
 *                         <extension base="<http://www.w3.org/2001/XMLSchema>boolean">
 *                           <attGroup ref="{http://www.spiritconsortium.org/XMLSchema/SPIRIT/1685-2009}bool.prompt.att"/>
 *                         </extension>
 *                       </simpleContent>
 *                     </complexType>
 *                   </element>
 *                   <element name="sourceFile" maxOccurs="unbounded" minOccurs="0">
 *                     <complexType>
 *                       <complexContent>
 *                         <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                           <sequence>
 *                             <element name="sourceName">
 *                               <complexType>
 *                                 <simpleContent>
 *                                   <extension base="<http://www.spiritconsortium.org/XMLSchema/SPIRIT/1685-2009>spiritURI">
 *                                   </extension>
 *                                 </simpleContent>
 *                               </complexType>
 *                             </element>
 *                             <group ref="{http://www.spiritconsortium.org/XMLSchema/SPIRIT/1685-2009}fileType"/>
 *                           </sequence>
 *                         </restriction>
 *                       </complexContent>
 *                     </complexType>
 *                   </element>
 *                 </sequence>
 *                 <attribute name="replicate" type="{http://www.w3.org/2001/XMLSchema}boolean" default="false" />
 *               </restriction>
 *             </complexContent>
 *           </complexType>
 *         </element>
 *         <element ref="{http://www.spiritconsortium.org/XMLSchema/SPIRIT/1685-2009}vendorExtensions" minOccurs="0"/>
 *       </sequence>
 *     </restriction>
 *   </complexContent>
 * </complexType>
 * }</pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "fileSetType", propOrder = {
    "name",
    "displayName",
    "description",
    "group",
    "file",
    "defaultFileBuilder",
    "dependency",
    "function",
    "vendorExtensions"
})
public class FileSetType {

    /**
     * Unique name
     * 
     */
    @XmlElement(required = true)
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    @XmlSchemaType(name = "Name")
    protected String name;
    /**
     * Element name for display purposes. Typically a few words providing a more detailed and/or user-friendly name than the spirit:name.
     * 
     */
    protected String displayName;
    /**
     * Full description string, typically for documentation
     * 
     */
    protected String description;
    /**
     * Identifies this filleSet as belonging to a particular group or having a particular purpose. Examples might be "diagnostics", "boot", "application", "interrupt", "deviceDriver", etc.
     * 
     */
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    @XmlSchemaType(name = "Name")
    protected List<String> group;
    /**
     * IP-XACT reference to a file or directory.
     * 
     */
    protected List<File> file;
    /**
     * Default command and flags used to build derived files from the sourceName files in this file set.
     * 
     */
    protected List<FileBuilderType> defaultFileBuilder;
    /**
     * Specifies a location on which  files or fileSets may be dependent. Typically, this would be a directory that would contain included files.
     * 
     */
    protected List<String> dependency;
    /**
     * Generator information if this file set describes a function. For example, this file set may describe diagnostics for which the DE can generate a diagnostics driver.
     * 
     */
    protected List<FileSetType.Function> function;
    /**
     * Container for vendor specific extensions.
     * 
     */
    protected VendorExtensions vendorExtensions;

    /**
     * Unique name
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getName() {
        return name;
    }

    /**
     * Sets the value of the name property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     * @see #getName()
     */
    public void setName(String value) {
        this.name = value;
    }

    /**
     * Element name for display purposes. Typically a few words providing a more detailed and/or user-friendly name than the spirit:name.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getDisplayName() {
        return displayName;
    }

    /**
     * Sets the value of the displayName property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     * @see #getDisplayName()
     */
    public void setDisplayName(String value) {
        this.displayName = value;
    }

    /**
     * Full description string, typically for documentation
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getDescription() {
        return description;
    }

    /**
     * Sets the value of the description property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     * @see #getDescription()
     */
    public void setDescription(String value) {
        this.description = value;
    }

    /**
     * Identifies this filleSet as belonging to a particular group or having a particular purpose. Examples might be "diagnostics", "boot", "application", "interrupt", "deviceDriver", etc.
     * 
     * Gets the value of the group property.
     * 
     * <p>This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the group property.</p>
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * </p>
     * <pre>
     * getGroup().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link String }
     * </p>
     * 
     * 
     * @return
     *     The value of the group property.
     */
    public List<String> getGroup() {
        if (group == null) {
            group = new ArrayList<>();
        }
        return this.group;
    }

    /**
     * IP-XACT reference to a file or directory.
     * 
     * Gets the value of the file property.
     * 
     * <p>This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the file property.</p>
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * </p>
     * <pre>
     * getFile().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link File }
     * </p>
     * 
     * 
     * @return
     *     The value of the file property.
     */
    public List<File> getFile() {
        if (file == null) {
            file = new ArrayList<>();
        }
        return this.file;
    }

    /**
     * Default command and flags used to build derived files from the sourceName files in this file set.
     * 
     * Gets the value of the defaultFileBuilder property.
     * 
     * <p>This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the defaultFileBuilder property.</p>
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * </p>
     * <pre>
     * getDefaultFileBuilder().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link FileBuilderType }
     * </p>
     * 
     * 
     * @return
     *     The value of the defaultFileBuilder property.
     */
    public List<FileBuilderType> getDefaultFileBuilder() {
        if (defaultFileBuilder == null) {
            defaultFileBuilder = new ArrayList<>();
        }
        return this.defaultFileBuilder;
    }

    /**
     * Specifies a location on which  files or fileSets may be dependent. Typically, this would be a directory that would contain included files.
     * 
     * Gets the value of the dependency property.
     * 
     * <p>This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the dependency property.</p>
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * </p>
     * <pre>
     * getDependency().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link String }
     * </p>
     * 
     * 
     * @return
     *     The value of the dependency property.
     */
    public List<String> getDependency() {
        if (dependency == null) {
            dependency = new ArrayList<>();
        }
        return this.dependency;
    }

    /**
     * Generator information if this file set describes a function. For example, this file set may describe diagnostics for which the DE can generate a diagnostics driver.
     * 
     * Gets the value of the function property.
     * 
     * <p>This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the function property.</p>
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * </p>
     * <pre>
     * getFunction().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link FileSetType.Function }
     * </p>
     * 
     * 
     * @return
     *     The value of the function property.
     */
    public List<FileSetType.Function> getFunction() {
        if (function == null) {
            function = new ArrayList<>();
        }
        return this.function;
    }

    /**
     * Container for vendor specific extensions.
     * 
     * @return
     *     possible object is
     *     {@link VendorExtensions }
     *     
     */
    public VendorExtensions getVendorExtensions() {
        return vendorExtensions;
    }

    /**
     * Sets the value of the vendorExtensions property.
     * 
     * @param value
     *     allowed object is
     *     {@link VendorExtensions }
     *     
     * @see #getVendorExtensions()
     */
    public void setVendorExtensions(VendorExtensions value) {
        this.vendorExtensions = value;
    }


    /**
     * <p>Java class for anonymous complex type</p>.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.</p>
     * 
     * <pre>{@code
     * <complexType>
     *   <complexContent>
     *     <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       <sequence>
     *         <element name="entryPoint" type="{http://www.w3.org/2001/XMLSchema}Name" minOccurs="0"/>
     *         <element name="fileRef" type="{http://www.w3.org/2001/XMLSchema}IDREF"/>
     *         <element name="returnType" minOccurs="0">
     *           <simpleType>
     *             <restriction base="{http://www.w3.org/2001/XMLSchema}string">
     *               <enumeration value="void"/>
     *               <enumeration value="int"/>
     *             </restriction>
     *           </simpleType>
     *         </element>
     *         <element name="argument" maxOccurs="unbounded" minOccurs="0">
     *           <complexType>
     *             <complexContent>
     *               <extension base="{http://www.spiritconsortium.org/XMLSchema/SPIRIT/1685-2009}nameValuePairType">
     *                 <attribute name="dataType" use="required" type="{http://www.spiritconsortium.org/XMLSchema/SPIRIT/1685-2009}dataTypeType" />
     *                 <anyAttribute processContents='lax'/>
     *               </extension>
     *             </complexContent>
     *           </complexType>
     *         </element>
     *         <element name="disabled" minOccurs="0">
     *           <complexType>
     *             <simpleContent>
     *               <extension base="<http://www.w3.org/2001/XMLSchema>boolean">
     *                 <attGroup ref="{http://www.spiritconsortium.org/XMLSchema/SPIRIT/1685-2009}bool.prompt.att"/>
     *               </extension>
     *             </simpleContent>
     *           </complexType>
     *         </element>
     *         <element name="sourceFile" maxOccurs="unbounded" minOccurs="0">
     *           <complexType>
     *             <complexContent>
     *               <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *                 <sequence>
     *                   <element name="sourceName">
     *                     <complexType>
     *                       <simpleContent>
     *                         <extension base="<http://www.spiritconsortium.org/XMLSchema/SPIRIT/1685-2009>spiritURI">
     *                         </extension>
     *                       </simpleContent>
     *                     </complexType>
     *                   </element>
     *                   <group ref="{http://www.spiritconsortium.org/XMLSchema/SPIRIT/1685-2009}fileType"/>
     *                 </sequence>
     *               </restriction>
     *             </complexContent>
     *           </complexType>
     *         </element>
     *       </sequence>
     *       <attribute name="replicate" type="{http://www.w3.org/2001/XMLSchema}boolean" default="false" />
     *     </restriction>
     *   </complexContent>
     * </complexType>
     * }</pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "entryPoint",
        "fileRef",
        "returnType",
        "argument",
        "disabled",
        "sourceFile"
    })
    public static class Function {

        /**
         * Optional name for the function.
         * 
         */
        @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
        @XmlSchemaType(name = "Name")
        protected String entryPoint;
        /**
         * A reference to the file that contains the entry point function.
         * 
         */
        @XmlElement(required = true)
        @XmlIDREF
        @XmlSchemaType(name = "IDREF")
        protected Object fileRef;
        /**
         * Function return type. Possible values are void and int.
         * 
         */
        protected String returnType;
        /**
         * Arguments passed in when the function is called. Arguments are passed in order.
         * 
         * This is an extension of the name-value pair which includes the data type in the spirit:dataType attribute.  The argument name is in the spirit:name element and its value is in the spirit:value element.
         * 
         */
        protected List<FileSetType.Function.Argument> argument;
        /**
         * Specifies if the SW function is enabled. If not present the function is always enabled.
         * 
         */
        protected FileSetType.Function.Disabled disabled;
        /**
         * Location information for the source file of this function.
         * 
         */
        protected List<FileSetType.Function.SourceFile> sourceFile;
        /**
         * If true directs the generator to compile a separate object module for each instance of the component in the design. If false (default) the function will be called with different arguments for each instance.
         * 
         */
        @XmlAttribute(name = "replicate", namespace = "http://www.spiritconsortium.org/XMLSchema/SPIRIT/1685-2009")
        protected Boolean replicate;

        /**
         * Optional name for the function.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getEntryPoint() {
            return entryPoint;
        }

        /**
         * Sets the value of the entryPoint property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         * @see #getEntryPoint()
         */
        public void setEntryPoint(String value) {
            this.entryPoint = value;
        }

        /**
         * A reference to the file that contains the entry point function.
         * 
         * @return
         *     possible object is
         *     {@link Object }
         *     
         */
        public Object getFileRef() {
            return fileRef;
        }

        /**
         * Sets the value of the fileRef property.
         * 
         * @param value
         *     allowed object is
         *     {@link Object }
         *     
         * @see #getFileRef()
         */
        public void setFileRef(Object value) {
            this.fileRef = value;
        }

        /**
         * Function return type. Possible values are void and int.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getReturnType() {
            return returnType;
        }

        /**
         * Sets the value of the returnType property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         * @see #getReturnType()
         */
        public void setReturnType(String value) {
            this.returnType = value;
        }

        /**
         * Arguments passed in when the function is called. Arguments are passed in order.
         * 
         * This is an extension of the name-value pair which includes the data type in the spirit:dataType attribute.  The argument name is in the spirit:name element and its value is in the spirit:value element.
         * 
         * Gets the value of the argument property.
         * 
         * <p>This accessor method returns a reference to the live list,
         * not a snapshot. Therefore any modification you make to the
         * returned list will be present inside the JAXB object.
         * This is why there is not a <CODE>set</CODE> method for the argument property.</p>
         * 
         * <p>
         * For example, to add a new item, do as follows:
         * </p>
         * <pre>
         * getArgument().add(newItem);
         * </pre>
         * 
         * 
         * <p>
         * Objects of the following type(s) are allowed in the list
         * {@link FileSetType.Function.Argument }
         * </p>
         * 
         * 
         * @return
         *     The value of the argument property.
         */
        public List<FileSetType.Function.Argument> getArgument() {
            if (argument == null) {
                argument = new ArrayList<>();
            }
            return this.argument;
        }

        /**
         * Specifies if the SW function is enabled. If not present the function is always enabled.
         * 
         * @return
         *     possible object is
         *     {@link FileSetType.Function.Disabled }
         *     
         */
        public FileSetType.Function.Disabled getDisabled() {
            return disabled;
        }

        /**
         * Sets the value of the disabled property.
         * 
         * @param value
         *     allowed object is
         *     {@link FileSetType.Function.Disabled }
         *     
         * @see #getDisabled()
         */
        public void setDisabled(FileSetType.Function.Disabled value) {
            this.disabled = value;
        }

        /**
         * Location information for the source file of this function.
         * 
         * Gets the value of the sourceFile property.
         * 
         * <p>This accessor method returns a reference to the live list,
         * not a snapshot. Therefore any modification you make to the
         * returned list will be present inside the JAXB object.
         * This is why there is not a <CODE>set</CODE> method for the sourceFile property.</p>
         * 
         * <p>
         * For example, to add a new item, do as follows:
         * </p>
         * <pre>
         * getSourceFile().add(newItem);
         * </pre>
         * 
         * 
         * <p>
         * Objects of the following type(s) are allowed in the list
         * {@link FileSetType.Function.SourceFile }
         * </p>
         * 
         * 
         * @return
         *     The value of the sourceFile property.
         */
        public List<FileSetType.Function.SourceFile> getSourceFile() {
            if (sourceFile == null) {
                sourceFile = new ArrayList<>();
            }
            return this.sourceFile;
        }

        /**
         * If true directs the generator to compile a separate object module for each instance of the component in the design. If false (default) the function will be called with different arguments for each instance.
         * 
         * @return
         *     possible object is
         *     {@link Boolean }
         *     
         */
        public boolean isReplicate() {
            if (replicate == null) {
                return false;
            } else {
                return replicate;
            }
        }

        /**
         * Sets the value of the replicate property.
         * 
         * @param value
         *     allowed object is
         *     {@link Boolean }
         *     
         * @see #isReplicate()
         */
        public void setReplicate(Boolean value) {
            this.replicate = value;
        }


        /**
         * <p>Java class for anonymous complex type</p>.
         * 
         * <p>The following schema fragment specifies the expected content contained within this class.</p>
         * 
         * <pre>{@code
         * <complexType>
         *   <complexContent>
         *     <extension base="{http://www.spiritconsortium.org/XMLSchema/SPIRIT/1685-2009}nameValuePairType">
         *       <attribute name="dataType" use="required" type="{http://www.spiritconsortium.org/XMLSchema/SPIRIT/1685-2009}dataTypeType" />
         *       <anyAttribute processContents='lax'/>
         *     </extension>
         *   </complexContent>
         * </complexType>
         * }</pre>
         * 
         * 
         */
        @XmlAccessorType(XmlAccessType.FIELD)
        @XmlType(name = "")
        public static class Argument
            extends NameValuePairType
        {

            /**
             * The data type of the argument as pertains to the language. Example: "int", "double", "char *".
             * 
             */
            @XmlAttribute(name = "dataType", namespace = "http://www.spiritconsortium.org/XMLSchema/SPIRIT/1685-2009", required = true)
            protected DataTypeType dataType;

            /**
             * The data type of the argument as pertains to the language. Example: "int", "double", "char *".
             * 
             * @return
             *     possible object is
             *     {@link DataTypeType }
             *     
             */
            public DataTypeType getDataType() {
                return dataType;
            }

            /**
             * Sets the value of the dataType property.
             * 
             * @param value
             *     allowed object is
             *     {@link DataTypeType }
             *     
             * @see #getDataType()
             */
            public void setDataType(DataTypeType value) {
                this.dataType = value;
            }

        }


        /**
         * <p>Java class for anonymous complex type</p>.
         * 
         * <p>The following schema fragment specifies the expected content contained within this class.</p>
         * 
         * <pre>{@code
         * <complexType>
         *   <simpleContent>
         *     <extension base="<http://www.w3.org/2001/XMLSchema>boolean">
         *       <attGroup ref="{http://www.spiritconsortium.org/XMLSchema/SPIRIT/1685-2009}bool.prompt.att"/>
         *     </extension>
         *   </simpleContent>
         * </complexType>
         * }</pre>
         * 
         * 
         */
        @XmlAccessorType(XmlAccessType.FIELD)
        @XmlType(name = "", propOrder = {
            "value"
        })
        public static class Disabled {

            @XmlValue
            protected boolean value;
            /**
             * Provides a string used to prompt the user for user-resolved property values.
             * 
             */
            @XmlAttribute(name = "prompt", namespace = "http://www.spiritconsortium.org/XMLSchema/SPIRIT/1685-2009")
            protected String prompt;
            /**
             * This is an indication on the format of the value for user defined properties.  bitString means a double quoted string of 1's an 0's, the input maybe in this format or a scaledInteger number. A bitStringLength attribute is required for bitString formats. bool means a boolean (true, false) is expected.  float means a decimal floating point number is expected.  long means an value of scaledInteger is expected.  String means any text is acceptable.
             * 
             */
            @XmlAttribute(name = "format", namespace = "http://www.spiritconsortium.org/XMLSchema/SPIRIT/1685-2009")
            protected FormatType format;
            /**
             * Indicates the data type of the range attributes (minimum and maximum). For reasons of backward compatibility, this attribute is assumed to have the value 'float' if not present.
             * 
             */
            @XmlAttribute(name = "rangeType", namespace = "http://www.spiritconsortium.org/XMLSchema/SPIRIT/1685-2009")
            protected RangeTypeType rangeType;
            /**
             * For user defined properties, refers the choice element enumerating the values to choose from.
             * 
             */
            @XmlAttribute(name = "choiceRef", namespace = "http://www.spiritconsortium.org/XMLSchema/SPIRIT/1685-2009")
            @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
            @XmlSchemaType(name = "Name")
            protected String choiceRef;
            /**
             * For components with auto-generated configuration forms, the user-resolved properties with order attibutes will be presented in ascending order.
             * 
             */
            @XmlAttribute(name = "order", namespace = "http://www.spiritconsortium.org/XMLSchema/SPIRIT/1685-2009")
            protected Float order;
            /**
             * Tags configurable properties so that they may be grouped together.  Configurable properties with matching values for this attribute are contained in the same group. The format of this attribute is a string. There is no semantic meaning to this attribute.
             * 
             */
            @XmlAttribute(name = "configGroups", namespace = "http://www.spiritconsortium.org/XMLSchema/SPIRIT/1685-2009")
            @XmlSchemaType(name = "NMTOKENS")
            protected List<String> configGroups;
            /**
             * Length of the bit string, required if the format is bitString
             * 
             */
            @XmlAttribute(name = "bitStringLength", namespace = "http://www.spiritconsortium.org/XMLSchema/SPIRIT/1685-2009")
            @XmlSchemaType(name = "nonNegativeInteger")
            protected BigInteger bitStringLength;
            /**
             * For user-resolved properties with numeric values, this indicates the minimum value allowed. Only valid for formats long and float.
             * 
             */
            @XmlAttribute(name = "minimum", namespace = "http://www.spiritconsortium.org/XMLSchema/SPIRIT/1685-2009")
            protected String minimum;
            /**
             * For user-resolved properties with numeric values, this indicates the maximum value allowed. Only valid for formats long and float
             * 
             */
            @XmlAttribute(name = "maximum", namespace = "http://www.spiritconsortium.org/XMLSchema/SPIRIT/1685-2009")
            protected String maximum;
            /**
             * Determines how a property value is resolved.
             * 
             */
            @XmlAttribute(name = "resolve", namespace = "http://www.spiritconsortium.org/XMLSchema/SPIRIT/1685-2009")
            protected ResolveType resolve;
            /**
             * ID attribute for uniquely identifying an element within its document. On elements with spirit:resolve attribute is used to refer to this element and otherwise can be used as a documentation ID.
             * 
             */
            @XmlAttribute(name = "id", namespace = "http://www.spiritconsortium.org/XMLSchema/SPIRIT/1685-2009")
            @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
            @XmlID
            @XmlSchemaType(name = "ID")
            protected String id;
            /**
             * Required on properties with a resolve = "dependent" attribute.  This is an XPath expression supplying the resultant value for the containing element in terms of other properties in the containing file.
             * 
             */
            @XmlAttribute(name = "dependency", namespace = "http://www.spiritconsortium.org/XMLSchema/SPIRIT/1685-2009")
            protected String dependency;
            @XmlAnyAttribute
            private Map<QName, String> otherAttributes = new HashMap<>();

            /**
             * Gets the value of the value property.
             * 
             */
            public boolean isValue() {
                return value;
            }

            /**
             * Sets the value of the value property.
             * 
             */
            public void setValue(boolean value) {
                this.value = value;
            }

            /**
             * Provides a string used to prompt the user for user-resolved property values.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getPrompt() {
                return prompt;
            }

            /**
             * Sets the value of the prompt property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             * @see #getPrompt()
             */
            public void setPrompt(String value) {
                this.prompt = value;
            }

            /**
             * This is an indication on the format of the value for user defined properties.  bitString means a double quoted string of 1's an 0's, the input maybe in this format or a scaledInteger number. A bitStringLength attribute is required for bitString formats. bool means a boolean (true, false) is expected.  float means a decimal floating point number is expected.  long means an value of scaledInteger is expected.  String means any text is acceptable.
             * 
             * @return
             *     possible object is
             *     {@link FormatType }
             *     
             */
            public FormatType getFormat() {
                if (format == null) {
                    return FormatType.BOOL;
                } else {
                    return format;
                }
            }

            /**
             * Sets the value of the format property.
             * 
             * @param value
             *     allowed object is
             *     {@link FormatType }
             *     
             * @see #getFormat()
             */
            public void setFormat(FormatType value) {
                this.format = value;
            }

            /**
             * Indicates the data type of the range attributes (minimum and maximum). For reasons of backward compatibility, this attribute is assumed to have the value 'float' if not present.
             * 
             * @return
             *     possible object is
             *     {@link RangeTypeType }
             *     
             */
            public RangeTypeType getRangeType() {
                if (rangeType == null) {
                    return RangeTypeType.INT;
                } else {
                    return rangeType;
                }
            }

            /**
             * Sets the value of the rangeType property.
             * 
             * @param value
             *     allowed object is
             *     {@link RangeTypeType }
             *     
             * @see #getRangeType()
             */
            public void setRangeType(RangeTypeType value) {
                this.rangeType = value;
            }

            /**
             * For user defined properties, refers the choice element enumerating the values to choose from.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getChoiceRef() {
                return choiceRef;
            }

            /**
             * Sets the value of the choiceRef property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             * @see #getChoiceRef()
             */
            public void setChoiceRef(String value) {
                this.choiceRef = value;
            }

            /**
             * For components with auto-generated configuration forms, the user-resolved properties with order attibutes will be presented in ascending order.
             * 
             * @return
             *     possible object is
             *     {@link Float }
             *     
             */
            public Float getOrder() {
                return order;
            }

            /**
             * Sets the value of the order property.
             * 
             * @param value
             *     allowed object is
             *     {@link Float }
             *     
             * @see #getOrder()
             */
            public void setOrder(Float value) {
                this.order = value;
            }

            /**
             * Tags configurable properties so that they may be grouped together.  Configurable properties with matching values for this attribute are contained in the same group. The format of this attribute is a string. There is no semantic meaning to this attribute.
             * 
             * Gets the value of the configGroups property.
             * 
             * <p>This accessor method returns a reference to the live list,
             * not a snapshot. Therefore any modification you make to the
             * returned list will be present inside the JAXB object.
             * This is why there is not a <CODE>set</CODE> method for the configGroups property.</p>
             * 
             * <p>
             * For example, to add a new item, do as follows:
             * </p>
             * <pre>
             * getConfigGroups().add(newItem);
             * </pre>
             * 
             * 
             * <p>
             * Objects of the following type(s) are allowed in the list
             * {@link String }
             * </p>
             * 
             * 
             * @return
             *     The value of the configGroups property.
             */
            public List<String> getConfigGroups() {
                if (configGroups == null) {
                    configGroups = new ArrayList<>();
                }
                return this.configGroups;
            }

            /**
             * Length of the bit string, required if the format is bitString
             * 
             * @return
             *     possible object is
             *     {@link BigInteger }
             *     
             */
            public BigInteger getBitStringLength() {
                return bitStringLength;
            }

            /**
             * Sets the value of the bitStringLength property.
             * 
             * @param value
             *     allowed object is
             *     {@link BigInteger }
             *     
             * @see #getBitStringLength()
             */
            public void setBitStringLength(BigInteger value) {
                this.bitStringLength = value;
            }

            /**
             * For user-resolved properties with numeric values, this indicates the minimum value allowed. Only valid for formats long and float.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getMinimum() {
                return minimum;
            }

            /**
             * Sets the value of the minimum property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             * @see #getMinimum()
             */
            public void setMinimum(String value) {
                this.minimum = value;
            }

            /**
             * For user-resolved properties with numeric values, this indicates the maximum value allowed. Only valid for formats long and float
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getMaximum() {
                return maximum;
            }

            /**
             * Sets the value of the maximum property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             * @see #getMaximum()
             */
            public void setMaximum(String value) {
                this.maximum = value;
            }

            /**
             * Determines how a property value is resolved.
             * 
             * @return
             *     possible object is
             *     {@link ResolveType }
             *     
             */
            public ResolveType getResolve() {
                if (resolve == null) {
                    return ResolveType.IMMEDIATE;
                } else {
                    return resolve;
                }
            }

            /**
             * Sets the value of the resolve property.
             * 
             * @param value
             *     allowed object is
             *     {@link ResolveType }
             *     
             * @see #getResolve()
             */
            public void setResolve(ResolveType value) {
                this.resolve = value;
            }

            /**
             * ID attribute for uniquely identifying an element within its document. On elements with spirit:resolve attribute is used to refer to this element and otherwise can be used as a documentation ID.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getId() {
                return id;
            }

            /**
             * Sets the value of the id property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             * @see #getId()
             */
            public void setId(String value) {
                this.id = value;
            }

            /**
             * Required on properties with a resolve = "dependent" attribute.  This is an XPath expression supplying the resultant value for the containing element in terms of other properties in the containing file.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getDependency() {
                return dependency;
            }

            /**
             * Sets the value of the dependency property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             * @see #getDependency()
             */
            public void setDependency(String value) {
                this.dependency = value;
            }

            /**
             * Gets a map that contains attributes that aren't bound to any typed property on this class.
             * 
             * <p>
             * the map is keyed by the name of the attribute and 
             * the value is the string value of the attribute.
             * 
             * the map returned by this method is live, and you can add new attribute
             * by updating the map directly. Because of this design, there's no setter.
             * 
             * 
             * @return
             *     always non-null
             */
            public Map<QName, String> getOtherAttributes() {
                return otherAttributes;
            }

        }


        /**
         * <p>Java class for anonymous complex type</p>.
         * 
         * <p>The following schema fragment specifies the expected content contained within this class.</p>
         * 
         * <pre>{@code
         * <complexType>
         *   <complexContent>
         *     <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
         *       <sequence>
         *         <element name="sourceName">
         *           <complexType>
         *             <simpleContent>
         *               <extension base="<http://www.spiritconsortium.org/XMLSchema/SPIRIT/1685-2009>spiritURI">
         *               </extension>
         *             </simpleContent>
         *           </complexType>
         *         </element>
         *         <group ref="{http://www.spiritconsortium.org/XMLSchema/SPIRIT/1685-2009}fileType"/>
         *       </sequence>
         *     </restriction>
         *   </complexContent>
         * </complexType>
         * }</pre>
         * 
         * 
         */
        @XmlAccessorType(XmlAccessType.FIELD)
        @XmlType(name = "", propOrder = {
            "sourceName",
            "fileType",
            "userFileType"
        })
        public static class SourceFile {

            /**
             * Source file for the boot load.  Relative names are searched for in the project directory and the source of the component directory.
             * 
             */
            @XmlElement(required = true)
            protected FileSetType.Function.SourceFile.SourceName sourceName;
            /**
             * Enumerated file types known by IP-XACT.
             * 
             */
            protected String fileType;
            /**
             * Free form file type, not - yet - known by IP-XACT .
             * 
             */
            protected String userFileType;

            /**
             * Source file for the boot load.  Relative names are searched for in the project directory and the source of the component directory.
             * 
             * @return
             *     possible object is
             *     {@link FileSetType.Function.SourceFile.SourceName }
             *     
             */
            public FileSetType.Function.SourceFile.SourceName getSourceName() {
                return sourceName;
            }

            /**
             * Sets the value of the sourceName property.
             * 
             * @param value
             *     allowed object is
             *     {@link FileSetType.Function.SourceFile.SourceName }
             *     
             * @see #getSourceName()
             */
            public void setSourceName(FileSetType.Function.SourceFile.SourceName value) {
                this.sourceName = value;
            }

            /**
             * Enumerated file types known by IP-XACT.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getFileType() {
                return fileType;
            }

            /**
             * Sets the value of the fileType property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             * @see #getFileType()
             */
            public void setFileType(String value) {
                this.fileType = value;
            }

            /**
             * Free form file type, not - yet - known by IP-XACT .
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getUserFileType() {
                return userFileType;
            }

            /**
             * Sets the value of the userFileType property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             * @see #getUserFileType()
             */
            public void setUserFileType(String value) {
                this.userFileType = value;
            }


            /**
             * <p>Java class for anonymous complex type</p>.
             * 
             * <p>The following schema fragment specifies the expected content contained within this class.</p>
             * 
             * <pre>{@code
             * <complexType>
             *   <simpleContent>
             *     <extension base="<http://www.spiritconsortium.org/XMLSchema/SPIRIT/1685-2009>spiritURI">
             *     </extension>
             *   </simpleContent>
             * </complexType>
             * }</pre>
             * 
             * 
             */
            @XmlAccessorType(XmlAccessType.FIELD)
            @XmlType(name = "", propOrder = {
                "value"
            })
            public static class SourceName {

                /**
                 * IP-XACT URI, like a standard xs:anyURI except that it can contain environment variables in the ${ } form, to be replaced by their value to provide the underlying URI
                 * 
                 */
                @XmlValue
                protected String value;

                /**
                 * IP-XACT URI, like a standard xs:anyURI except that it can contain environment variables in the ${ } form, to be replaced by their value to provide the underlying URI
                 * 
                 * @return
                 *     possible object is
                 *     {@link String }
                 *     
                 */
                public String getValue() {
                    return value;
                }

                /**
                 * Sets the value of the value property.
                 * 
                 * @param value
                 *     allowed object is
                 *     {@link String }
                 *     
                 * @see #getValue()
                 */
                public void setValue(String value) {
                    this.value = value;
                }

            }

        }

    }

}
