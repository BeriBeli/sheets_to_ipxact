//
// This file was generated by the Eclipse Implementation of JAXB, v4.0.5 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
//


package org.example.schema.s1685_2009;

import java.math.BigInteger;
import java.util.ArrayList;
import java.util.List;
import jakarta.xml.bind.annotation.XmlAccessType;
import jakarta.xml.bind.annotation.XmlAccessorType;
import jakarta.xml.bind.annotation.XmlAttribute;
import jakarta.xml.bind.annotation.XmlElement;
import jakarta.xml.bind.annotation.XmlSchemaType;
import jakarta.xml.bind.annotation.XmlType;
import jakarta.xml.bind.annotation.adapters.CollapsedStringAdapter;
import jakarta.xml.bind.annotation.adapters.XmlJavaTypeAdapter;


/**
 * Reference to a whiteboxElement within a view. The 'name' attribute must refer to a whiteboxElement defined within this component.
 * 
 * <p>Java class for whiteboxElementRefType complex type</p>.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.</p>
 * 
 * <pre>{@code
 * <complexType name="whiteboxElementRefType">
 *   <complexContent>
 *     <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       <sequence>
 *         <element name="whiteboxPath" maxOccurs="unbounded">
 *           <complexType>
 *             <complexContent>
 *               <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                 <sequence>
 *                   <element name="pathName" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *                   <sequence minOccurs="0">
 *                     <element name="left" type="{http://www.w3.org/2001/XMLSchema}nonNegativeInteger"/>
 *                     <element name="right" type="{http://www.w3.org/2001/XMLSchema}nonNegativeInteger"/>
 *                   </sequence>
 *                 </sequence>
 *               </restriction>
 *             </complexContent>
 *           </complexType>
 *         </element>
 *       </sequence>
 *       <attribute name="name" use="required" type="{http://www.w3.org/2001/XMLSchema}Name" />
 *     </restriction>
 *   </complexContent>
 * </complexType>
 * }</pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "whiteboxElementRefType", propOrder = {
    "whiteboxPath"
})
public class WhiteboxElementRefType {

    /**
     * The whiteboxPath elements (as a set) define the name(s) needed to define the entire white box element in this view.
     * 
     */
    @XmlElement(required = true)
    protected List<WhiteboxElementRefType.WhiteboxPath> whiteboxPath;
    /**
     * Reference to a whiteboxElement defined within this component.
     * 
     */
    @XmlAttribute(name = "name", namespace = "http://www.spiritconsortium.org/XMLSchema/SPIRIT/1685-2009", required = true)
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    @XmlSchemaType(name = "Name")
    protected String name;

    /**
     * The whiteboxPath elements (as a set) define the name(s) needed to define the entire white box element in this view.
     * 
     * Gets the value of the whiteboxPath property.
     * 
     * <p>This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the whiteboxPath property.</p>
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * </p>
     * <pre>
     * getWhiteboxPath().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link WhiteboxElementRefType.WhiteboxPath }
     * </p>
     * 
     * 
     * @return
     *     The value of the whiteboxPath property.
     */
    public List<WhiteboxElementRefType.WhiteboxPath> getWhiteboxPath() {
        if (whiteboxPath == null) {
            whiteboxPath = new ArrayList<>();
        }
        return this.whiteboxPath;
    }

    /**
     * Reference to a whiteboxElement defined within this component.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getName() {
        return name;
    }

    /**
     * Sets the value of the name property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     * @see #getName()
     */
    public void setName(String value) {
        this.name = value;
    }


    /**
     * <p>Java class for anonymous complex type</p>.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.</p>
     * 
     * <pre>{@code
     * <complexType>
     *   <complexContent>
     *     <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       <sequence>
     *         <element name="pathName" type="{http://www.w3.org/2001/XMLSchema}string"/>
     *         <sequence minOccurs="0">
     *           <element name="left" type="{http://www.w3.org/2001/XMLSchema}nonNegativeInteger"/>
     *           <element name="right" type="{http://www.w3.org/2001/XMLSchema}nonNegativeInteger"/>
     *         </sequence>
     *       </sequence>
     *     </restriction>
     *   </complexContent>
     * </complexType>
     * }</pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "pathName",
        "left",
        "right"
    })
    public static class WhiteboxPath {

        /**
         * The view specific name for a portion of the white box element.
         * 
         */
        @XmlElement(required = true)
        protected String pathName;
        /**
         * Indicates the left bound value for the associated path name.
         * 
         */
        @XmlSchemaType(name = "nonNegativeInteger")
        protected BigInteger left;
        /**
         * Indicates the right bound values for the associated path name.
         * 
         */
        @XmlSchemaType(name = "nonNegativeInteger")
        protected BigInteger right;

        /**
         * The view specific name for a portion of the white box element.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getPathName() {
            return pathName;
        }

        /**
         * Sets the value of the pathName property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         * @see #getPathName()
         */
        public void setPathName(String value) {
            this.pathName = value;
        }

        /**
         * Indicates the left bound value for the associated path name.
         * 
         * @return
         *     possible object is
         *     {@link BigInteger }
         *     
         */
        public BigInteger getLeft() {
            return left;
        }

        /**
         * Sets the value of the left property.
         * 
         * @param value
         *     allowed object is
         *     {@link BigInteger }
         *     
         * @see #getLeft()
         */
        public void setLeft(BigInteger value) {
            this.left = value;
        }

        /**
         * Indicates the right bound values for the associated path name.
         * 
         * @return
         *     possible object is
         *     {@link BigInteger }
         *     
         */
        public BigInteger getRight() {
            return right;
        }

        /**
         * Sets the value of the right property.
         * 
         * @param value
         *     allowed object is
         *     {@link BigInteger }
         *     
         * @see #getRight()
         */
        public void setRight(BigInteger value) {
            this.right = value;
        }

    }

}
