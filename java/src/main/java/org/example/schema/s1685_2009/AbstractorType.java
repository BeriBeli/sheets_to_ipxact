//
// This file was generated by the Eclipse Implementation of JAXB, v4.0.5 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
//


package org.example.schema.s1685_2009;

import java.util.ArrayList;
import java.util.List;
import jakarta.xml.bind.annotation.XmlAccessType;
import jakarta.xml.bind.annotation.XmlAccessorType;
import jakarta.xml.bind.annotation.XmlAttribute;
import jakarta.xml.bind.annotation.XmlElement;
import jakarta.xml.bind.annotation.XmlSchemaType;
import jakarta.xml.bind.annotation.XmlType;
import jakarta.xml.bind.annotation.XmlValue;
import jakarta.xml.bind.annotation.adapters.CollapsedStringAdapter;
import jakarta.xml.bind.annotation.adapters.XmlJavaTypeAdapter;


/**
 * Abstractor-specific extension to abstractorType
 * 
 * <p>Java class for abstractorType complex type</p>.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.</p>
 * 
 * <pre>{@code
 * <complexType name="abstractorType">
 *   <complexContent>
 *     <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       <sequence>
 *         <group ref="{http://www.spiritconsortium.org/XMLSchema/SPIRIT/1685-2009}versionedIdentifier"/>
 *         <element name="abstractorMode">
 *           <complexType>
 *             <simpleContent>
 *               <extension base="<http://www.spiritconsortium.org/XMLSchema/SPIRIT/1685-2009>abstractorModeType">
 *                 <attribute name="group" type="{http://www.w3.org/2001/XMLSchema}Name" />
 *               </extension>
 *             </simpleContent>
 *           </complexType>
 *         </element>
 *         <element name="busType" type="{http://www.spiritconsortium.org/XMLSchema/SPIRIT/1685-2009}libraryRefType"/>
 *         <element name="abstractorInterfaces">
 *           <complexType>
 *             <complexContent>
 *               <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                 <sequence>
 *                   <element name="abstractorInterface" type="{http://www.spiritconsortium.org/XMLSchema/SPIRIT/1685-2009}abstractorBusInterfaceType" maxOccurs="2" minOccurs="2"/>
 *                 </sequence>
 *               </restriction>
 *             </complexContent>
 *           </complexType>
 *         </element>
 *         <element name="model" type="{http://www.spiritconsortium.org/XMLSchema/SPIRIT/1685-2009}abstractorModelType" minOccurs="0"/>
 *         <element ref="{http://www.spiritconsortium.org/XMLSchema/SPIRIT/1685-2009}abstractorGenerators" minOccurs="0"/>
 *         <element ref="{http://www.spiritconsortium.org/XMLSchema/SPIRIT/1685-2009}choices" minOccurs="0"/>
 *         <element ref="{http://www.spiritconsortium.org/XMLSchema/SPIRIT/1685-2009}fileSets" minOccurs="0"/>
 *         <element ref="{http://www.spiritconsortium.org/XMLSchema/SPIRIT/1685-2009}description" minOccurs="0"/>
 *         <element ref="{http://www.spiritconsortium.org/XMLSchema/SPIRIT/1685-2009}parameters" minOccurs="0"/>
 *         <element ref="{http://www.spiritconsortium.org/XMLSchema/SPIRIT/1685-2009}vendorExtensions" minOccurs="0"/>
 *       </sequence>
 *     </restriction>
 *   </complexContent>
 * </complexType>
 * }</pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "abstractorType", propOrder = {
    "vendor",
    "library",
    "name",
    "version",
    "abstractorMode",
    "busType",
    "abstractorInterfaces",
    "model",
    "abstractorGenerators",
    "choices",
    "fileSets",
    "description",
    "parameters",
    "vendorExtensions"
})
public class AbstractorType {

    /**
     * Name of the vendor who supplies this file.
     * 
     */
    @XmlElement(required = true)
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    @XmlSchemaType(name = "Name")
    protected String vendor;
    /**
     * Name of the logical library this element belongs to.
     * 
     */
    @XmlElement(required = true)
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    @XmlSchemaType(name = "Name")
    protected String library;
    /**
     * The name of the object.
     * 
     */
    @XmlElement(required = true)
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    @XmlSchemaType(name = "NMTOKEN")
    protected String name;
    /**
     * Indicates the version of the named element.
     * 
     */
    @XmlElement(required = true)
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    @XmlSchemaType(name = "NMTOKEN")
    protected String version;
    /**
     * Define the mode for the interfaces on this abstractor. 
     * 
     * For master the first interface connects to the master, the second connects to the mirroredMaster
     * 
     * For slave the first interface connects to the mirroredSlave the second connects to the slave
     * 
     * For direct the first interface connects to the master, the second connects to the slave
     * 
     * For system the first interface connects to the system, the second connects to the mirroredSystem. For system the group attribute is required
     * 
     */
    @XmlElement(required = true)
    protected AbstractorType.AbstractorMode abstractorMode;
    /**
     * The bus type of both interfaces. Refers to bus definition using vendor, library, name, version attributes.
     * 
     */
    @XmlElement(required = true)
    protected LibraryRefType busType;
    /**
     * The interfaces supported by this abstractor
     * 
     */
    @XmlElement(required = true)
    protected AbstractorType.AbstractorInterfaces abstractorInterfaces;
    /**
     * Model information.
     * 
     */
    protected AbstractorModelType model;
    /**
     * Generator list is tools-specific.
     * 
     */
    protected AbstractorGenerators abstractorGenerators;
    /**
     * Choices used by elements with an attribute spirit:choiceRef.
     * 
     */
    protected Choices choices;
    /**
     * List of file sets associated with component.
     * 
     */
    protected FileSets fileSets;
    /**
     * Full description string, typically for documentation
     * 
     */
    protected String description;
    /**
     * A collection of parameters.
     * 
     */
    protected Parameters parameters;
    /**
     * Container for vendor specific extensions.
     * 
     */
    protected VendorExtensions vendorExtensions;

    /**
     * Name of the vendor who supplies this file.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getVendor() {
        return vendor;
    }

    /**
     * Sets the value of the vendor property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     * @see #getVendor()
     */
    public void setVendor(String value) {
        this.vendor = value;
    }

    /**
     * Name of the logical library this element belongs to.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getLibrary() {
        return library;
    }

    /**
     * Sets the value of the library property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     * @see #getLibrary()
     */
    public void setLibrary(String value) {
        this.library = value;
    }

    /**
     * The name of the object.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getName() {
        return name;
    }

    /**
     * Sets the value of the name property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     * @see #getName()
     */
    public void setName(String value) {
        this.name = value;
    }

    /**
     * Indicates the version of the named element.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getVersion() {
        return version;
    }

    /**
     * Sets the value of the version property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     * @see #getVersion()
     */
    public void setVersion(String value) {
        this.version = value;
    }

    /**
     * Define the mode for the interfaces on this abstractor. 
     * 
     * For master the first interface connects to the master, the second connects to the mirroredMaster
     * 
     * For slave the first interface connects to the mirroredSlave the second connects to the slave
     * 
     * For direct the first interface connects to the master, the second connects to the slave
     * 
     * For system the first interface connects to the system, the second connects to the mirroredSystem. For system the group attribute is required
     * 
     * @return
     *     possible object is
     *     {@link AbstractorType.AbstractorMode }
     *     
     */
    public AbstractorType.AbstractorMode getAbstractorMode() {
        return abstractorMode;
    }

    /**
     * Sets the value of the abstractorMode property.
     * 
     * @param value
     *     allowed object is
     *     {@link AbstractorType.AbstractorMode }
     *     
     * @see #getAbstractorMode()
     */
    public void setAbstractorMode(AbstractorType.AbstractorMode value) {
        this.abstractorMode = value;
    }

    /**
     * The bus type of both interfaces. Refers to bus definition using vendor, library, name, version attributes.
     * 
     * @return
     *     possible object is
     *     {@link LibraryRefType }
     *     
     */
    public LibraryRefType getBusType() {
        return busType;
    }

    /**
     * Sets the value of the busType property.
     * 
     * @param value
     *     allowed object is
     *     {@link LibraryRefType }
     *     
     * @see #getBusType()
     */
    public void setBusType(LibraryRefType value) {
        this.busType = value;
    }

    /**
     * The interfaces supported by this abstractor
     * 
     * @return
     *     possible object is
     *     {@link AbstractorType.AbstractorInterfaces }
     *     
     */
    public AbstractorType.AbstractorInterfaces getAbstractorInterfaces() {
        return abstractorInterfaces;
    }

    /**
     * Sets the value of the abstractorInterfaces property.
     * 
     * @param value
     *     allowed object is
     *     {@link AbstractorType.AbstractorInterfaces }
     *     
     * @see #getAbstractorInterfaces()
     */
    public void setAbstractorInterfaces(AbstractorType.AbstractorInterfaces value) {
        this.abstractorInterfaces = value;
    }

    /**
     * Model information.
     * 
     * @return
     *     possible object is
     *     {@link AbstractorModelType }
     *     
     */
    public AbstractorModelType getModel() {
        return model;
    }

    /**
     * Sets the value of the model property.
     * 
     * @param value
     *     allowed object is
     *     {@link AbstractorModelType }
     *     
     * @see #getModel()
     */
    public void setModel(AbstractorModelType value) {
        this.model = value;
    }

    /**
     * Generator list is tools-specific.
     * 
     * @return
     *     possible object is
     *     {@link AbstractorGenerators }
     *     
     */
    public AbstractorGenerators getAbstractorGenerators() {
        return abstractorGenerators;
    }

    /**
     * Sets the value of the abstractorGenerators property.
     * 
     * @param value
     *     allowed object is
     *     {@link AbstractorGenerators }
     *     
     * @see #getAbstractorGenerators()
     */
    public void setAbstractorGenerators(AbstractorGenerators value) {
        this.abstractorGenerators = value;
    }

    /**
     * Choices used by elements with an attribute spirit:choiceRef.
     * 
     * @return
     *     possible object is
     *     {@link Choices }
     *     
     */
    public Choices getChoices() {
        return choices;
    }

    /**
     * Sets the value of the choices property.
     * 
     * @param value
     *     allowed object is
     *     {@link Choices }
     *     
     * @see #getChoices()
     */
    public void setChoices(Choices value) {
        this.choices = value;
    }

    /**
     * List of file sets associated with component.
     * 
     * @return
     *     possible object is
     *     {@link FileSets }
     *     
     */
    public FileSets getFileSets() {
        return fileSets;
    }

    /**
     * Sets the value of the fileSets property.
     * 
     * @param value
     *     allowed object is
     *     {@link FileSets }
     *     
     * @see #getFileSets()
     */
    public void setFileSets(FileSets value) {
        this.fileSets = value;
    }

    /**
     * Full description string, typically for documentation
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getDescription() {
        return description;
    }

    /**
     * Sets the value of the description property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     * @see #getDescription()
     */
    public void setDescription(String value) {
        this.description = value;
    }

    /**
     * A collection of parameters.
     * 
     * @return
     *     possible object is
     *     {@link Parameters }
     *     
     */
    public Parameters getParameters() {
        return parameters;
    }

    /**
     * Sets the value of the parameters property.
     * 
     * @param value
     *     allowed object is
     *     {@link Parameters }
     *     
     * @see #getParameters()
     */
    public void setParameters(Parameters value) {
        this.parameters = value;
    }

    /**
     * Container for vendor specific extensions.
     * 
     * @return
     *     possible object is
     *     {@link VendorExtensions }
     *     
     */
    public VendorExtensions getVendorExtensions() {
        return vendorExtensions;
    }

    /**
     * Sets the value of the vendorExtensions property.
     * 
     * @param value
     *     allowed object is
     *     {@link VendorExtensions }
     *     
     * @see #getVendorExtensions()
     */
    public void setVendorExtensions(VendorExtensions value) {
        this.vendorExtensions = value;
    }


    /**
     * <p>Java class for anonymous complex type</p>.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.</p>
     * 
     * <pre>{@code
     * <complexType>
     *   <complexContent>
     *     <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       <sequence>
     *         <element name="abstractorInterface" type="{http://www.spiritconsortium.org/XMLSchema/SPIRIT/1685-2009}abstractorBusInterfaceType" maxOccurs="2" minOccurs="2"/>
     *       </sequence>
     *     </restriction>
     *   </complexContent>
     * </complexType>
     * }</pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "abstractorInterface"
    })
    public static class AbstractorInterfaces {

        /**
         * An abstractor must have exactly 2 Interfaces.
         * 
         */
        @XmlElement(required = true)
        protected List<AbstractorBusInterfaceType> abstractorInterface;

        /**
         * An abstractor must have exactly 2 Interfaces.
         * 
         * Gets the value of the abstractorInterface property.
         * 
         * <p>This accessor method returns a reference to the live list,
         * not a snapshot. Therefore any modification you make to the
         * returned list will be present inside the JAXB object.
         * This is why there is not a <CODE>set</CODE> method for the abstractorInterface property.</p>
         * 
         * <p>
         * For example, to add a new item, do as follows:
         * </p>
         * <pre>
         * getAbstractorInterface().add(newItem);
         * </pre>
         * 
         * 
         * <p>
         * Objects of the following type(s) are allowed in the list
         * {@link AbstractorBusInterfaceType }
         * </p>
         * 
         * 
         * @return
         *     The value of the abstractorInterface property.
         */
        public List<AbstractorBusInterfaceType> getAbstractorInterface() {
            if (abstractorInterface == null) {
                abstractorInterface = new ArrayList<>();
            }
            return this.abstractorInterface;
        }

    }


    /**
     * <p>Java class for anonymous complex type</p>.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.</p>
     * 
     * <pre>{@code
     * <complexType>
     *   <simpleContent>
     *     <extension base="<http://www.spiritconsortium.org/XMLSchema/SPIRIT/1685-2009>abstractorModeType">
     *       <attribute name="group" type="{http://www.w3.org/2001/XMLSchema}Name" />
     *     </extension>
     *   </simpleContent>
     * </complexType>
     * }</pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "value"
    })
    public static class AbstractorMode {

        /**
         * Mode for this abstractor
         * 
         */
        @XmlValue
        protected AbstractorModeType value;
        /**
         * Define the system group if the mode is set to system
         * 
         */
        @XmlAttribute(name = "group", namespace = "http://www.spiritconsortium.org/XMLSchema/SPIRIT/1685-2009")
        @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
        @XmlSchemaType(name = "Name")
        protected String group;

        /**
         * Mode for this abstractor
         * 
         * @return
         *     possible object is
         *     {@link AbstractorModeType }
         *     
         */
        public AbstractorModeType getValue() {
            return value;
        }

        /**
         * Sets the value of the value property.
         * 
         * @param value
         *     allowed object is
         *     {@link AbstractorModeType }
         *     
         * @see #getValue()
         */
        public void setValue(AbstractorModeType value) {
            this.value = value;
        }

        /**
         * Define the system group if the mode is set to system
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getGroup() {
            return group;
        }

        /**
         * Sets the value of the group property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         * @see #getGroup()
         */
        public void setGroup(String value) {
            this.group = value;
        }

    }

}
