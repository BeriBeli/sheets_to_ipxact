//
// This file was generated by the Eclipse Implementation of JAXB, v4.0.5 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
//


package org.example.schema.s1685_2009;

import java.util.ArrayList;
import java.util.List;
import jakarta.xml.bind.annotation.XmlAccessType;
import jakarta.xml.bind.annotation.XmlAccessorType;
import jakarta.xml.bind.annotation.XmlType;


/**
 * Model information for an abstractor.
 * 
 * <p>Java class for abstractorModelType complex type</p>.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.</p>
 * 
 * <pre>{@code
 * <complexType name="abstractorModelType">
 *   <complexContent>
 *     <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       <sequence>
 *         <element name="views" minOccurs="0">
 *           <complexType>
 *             <complexContent>
 *               <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                 <sequence>
 *                   <element name="view" type="{http://www.spiritconsortium.org/XMLSchema/SPIRIT/1685-2009}abstractorViewType" maxOccurs="unbounded" minOccurs="0"/>
 *                 </sequence>
 *               </restriction>
 *             </complexContent>
 *           </complexType>
 *         </element>
 *         <element name="ports" minOccurs="0">
 *           <complexType>
 *             <complexContent>
 *               <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                 <sequence>
 *                   <element name="port" type="{http://www.spiritconsortium.org/XMLSchema/SPIRIT/1685-2009}abstractorPortType" maxOccurs="unbounded" minOccurs="0"/>
 *                 </sequence>
 *               </restriction>
 *             </complexContent>
 *           </complexType>
 *         </element>
 *         <element name="modelParameters" minOccurs="0">
 *           <complexType>
 *             <complexContent>
 *               <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                 <sequence>
 *                   <element name="modelParameter" type="{http://www.spiritconsortium.org/XMLSchema/SPIRIT/1685-2009}nameValueTypeType" maxOccurs="unbounded" minOccurs="0"/>
 *                 </sequence>
 *               </restriction>
 *             </complexContent>
 *           </complexType>
 *         </element>
 *       </sequence>
 *     </restriction>
 *   </complexContent>
 * </complexType>
 * }</pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "abstractorModelType", propOrder = {
    "views",
    "ports",
    "modelParameters"
})
public class AbstractorModelType {

    /**
     * View container
     * 
     */
    protected AbstractorModelType.Views views;
    /**
     * Port container
     * 
     */
    protected AbstractorModelType.Ports ports;
    /**
     * Model parameter name value pairs container
     * 
     */
    protected AbstractorModelType.ModelParameters modelParameters;

    /**
     * View container
     * 
     * @return
     *     possible object is
     *     {@link AbstractorModelType.Views }
     *     
     */
    public AbstractorModelType.Views getViews() {
        return views;
    }

    /**
     * Sets the value of the views property.
     * 
     * @param value
     *     allowed object is
     *     {@link AbstractorModelType.Views }
     *     
     * @see #getViews()
     */
    public void setViews(AbstractorModelType.Views value) {
        this.views = value;
    }

    /**
     * Port container
     * 
     * @return
     *     possible object is
     *     {@link AbstractorModelType.Ports }
     *     
     */
    public AbstractorModelType.Ports getPorts() {
        return ports;
    }

    /**
     * Sets the value of the ports property.
     * 
     * @param value
     *     allowed object is
     *     {@link AbstractorModelType.Ports }
     *     
     * @see #getPorts()
     */
    public void setPorts(AbstractorModelType.Ports value) {
        this.ports = value;
    }

    /**
     * Model parameter name value pairs container
     * 
     * @return
     *     possible object is
     *     {@link AbstractorModelType.ModelParameters }
     *     
     */
    public AbstractorModelType.ModelParameters getModelParameters() {
        return modelParameters;
    }

    /**
     * Sets the value of the modelParameters property.
     * 
     * @param value
     *     allowed object is
     *     {@link AbstractorModelType.ModelParameters }
     *     
     * @see #getModelParameters()
     */
    public void setModelParameters(AbstractorModelType.ModelParameters value) {
        this.modelParameters = value;
    }


    /**
     * <p>Java class for anonymous complex type</p>.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.</p>
     * 
     * <pre>{@code
     * <complexType>
     *   <complexContent>
     *     <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       <sequence>
     *         <element name="modelParameter" type="{http://www.spiritconsortium.org/XMLSchema/SPIRIT/1685-2009}nameValueTypeType" maxOccurs="unbounded" minOccurs="0"/>
     *       </sequence>
     *     </restriction>
     *   </complexContent>
     * </complexType>
     * }</pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "modelParameter"
    })
    public static class ModelParameters {

        /**
         * A model parameter name value pair. The name is given in an attribute. The value is the element value. The dataType (applicable to high level modeling) is given in the dataType attribute. For hardware based models, the name should be identical to the RTL (VHDL generic or Verilog parameter). The usageType attribute indicate how the model parameter is to be used.
         * 
         */
        protected List<NameValueTypeType> modelParameter;

        /**
         * A model parameter name value pair. The name is given in an attribute. The value is the element value. The dataType (applicable to high level modeling) is given in the dataType attribute. For hardware based models, the name should be identical to the RTL (VHDL generic or Verilog parameter). The usageType attribute indicate how the model parameter is to be used.
         * 
         * Gets the value of the modelParameter property.
         * 
         * <p>This accessor method returns a reference to the live list,
         * not a snapshot. Therefore any modification you make to the
         * returned list will be present inside the JAXB object.
         * This is why there is not a <CODE>set</CODE> method for the modelParameter property.</p>
         * 
         * <p>
         * For example, to add a new item, do as follows:
         * </p>
         * <pre>
         * getModelParameter().add(newItem);
         * </pre>
         * 
         * 
         * <p>
         * Objects of the following type(s) are allowed in the list
         * {@link NameValueTypeType }
         * </p>
         * 
         * 
         * @return
         *     The value of the modelParameter property.
         */
        public List<NameValueTypeType> getModelParameter() {
            if (modelParameter == null) {
                modelParameter = new ArrayList<>();
            }
            return this.modelParameter;
        }

    }


    /**
     * <p>Java class for anonymous complex type</p>.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.</p>
     * 
     * <pre>{@code
     * <complexType>
     *   <complexContent>
     *     <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       <sequence>
     *         <element name="port" type="{http://www.spiritconsortium.org/XMLSchema/SPIRIT/1685-2009}abstractorPortType" maxOccurs="unbounded" minOccurs="0"/>
     *       </sequence>
     *     </restriction>
     *   </complexContent>
     * </complexType>
     * }</pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "port"
    })
    public static class Ports {

        protected List<AbstractorPortType> port;

        /**
         * Gets the value of the port property.
         * 
         * <p>This accessor method returns a reference to the live list,
         * not a snapshot. Therefore any modification you make to the
         * returned list will be present inside the JAXB object.
         * This is why there is not a <CODE>set</CODE> method for the port property.</p>
         * 
         * <p>
         * For example, to add a new item, do as follows:
         * </p>
         * <pre>
         * getPort().add(newItem);
         * </pre>
         * 
         * 
         * <p>
         * Objects of the following type(s) are allowed in the list
         * {@link AbstractorPortType }
         * </p>
         * 
         * 
         * @return
         *     The value of the port property.
         */
        public List<AbstractorPortType> getPort() {
            if (port == null) {
                port = new ArrayList<>();
            }
            return this.port;
        }

    }


    /**
     * <p>Java class for anonymous complex type</p>.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.</p>
     * 
     * <pre>{@code
     * <complexType>
     *   <complexContent>
     *     <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       <sequence>
     *         <element name="view" type="{http://www.spiritconsortium.org/XMLSchema/SPIRIT/1685-2009}abstractorViewType" maxOccurs="unbounded" minOccurs="0"/>
     *       </sequence>
     *     </restriction>
     *   </complexContent>
     * </complexType>
     * }</pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "view"
    })
    public static class Views {

        /**
         * Single view of an abstractor
         * 
         */
        protected List<AbstractorViewType> view;

        /**
         * Single view of an abstractor
         * 
         * Gets the value of the view property.
         * 
         * <p>This accessor method returns a reference to the live list,
         * not a snapshot. Therefore any modification you make to the
         * returned list will be present inside the JAXB object.
         * This is why there is not a <CODE>set</CODE> method for the view property.</p>
         * 
         * <p>
         * For example, to add a new item, do as follows:
         * </p>
         * <pre>
         * getView().add(newItem);
         * </pre>
         * 
         * 
         * <p>
         * Objects of the following type(s) are allowed in the list
         * {@link AbstractorViewType }
         * </p>
         * 
         * 
         * @return
         *     The value of the view property.
         */
        public List<AbstractorViewType> getView() {
            if (view == null) {
                view = new ArrayList<>();
            }
            return this.view;
        }

    }

}
