//
// This file was generated by the Eclipse Implementation of JAXB, v4.0.5 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
//


package org.example.schema.s1685_2009;

import java.math.BigInteger;
import java.util.ArrayList;
import java.util.List;
import jakarta.xml.bind.annotation.XmlAccessType;
import jakarta.xml.bind.annotation.XmlAccessorType;
import jakarta.xml.bind.annotation.XmlAttribute;
import jakarta.xml.bind.annotation.XmlElement;
import jakarta.xml.bind.annotation.XmlRootElement;
import jakarta.xml.bind.annotation.XmlSchemaType;
import jakarta.xml.bind.annotation.XmlType;
import jakarta.xml.bind.annotation.XmlValue;
import jakarta.xml.bind.annotation.adapters.CollapsedStringAdapter;
import jakarta.xml.bind.annotation.adapters.XmlJavaTypeAdapter;


/**
 * <p>Java class for anonymous complex type</p>.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.</p>
 * 
 * <pre>{@code
 * <complexType>
 *   <complexContent>
 *     <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       <sequence>
 *         <element name="remapState" maxOccurs="unbounded">
 *           <complexType>
 *             <complexContent>
 *               <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                 <sequence>
 *                   <group ref="{http://www.spiritconsortium.org/XMLSchema/SPIRIT/1685-2009}nameGroup"/>
 *                   <element name="remapPorts" minOccurs="0">
 *                     <complexType>
 *                       <complexContent>
 *                         <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                           <sequence>
 *                             <element name="remapPort" maxOccurs="unbounded">
 *                               <complexType>
 *                                 <simpleContent>
 *                                   <extension base="<http://www.spiritconsortium.org/XMLSchema/SPIRIT/1685-2009>scaledNonNegativeInteger">
 *                                     <attribute name="portNameRef" use="required" type="{http://www.spiritconsortium.org/XMLSchema/SPIRIT/1685-2009}portName" />
 *                                     <attribute name="portIndex" type="{http://www.w3.org/2001/XMLSchema}nonNegativeInteger" />
 *                                   </extension>
 *                                 </simpleContent>
 *                               </complexType>
 *                             </element>
 *                           </sequence>
 *                         </restriction>
 *                       </complexContent>
 *                     </complexType>
 *                   </element>
 *                 </sequence>
 *               </restriction>
 *             </complexContent>
 *           </complexType>
 *         </element>
 *       </sequence>
 *     </restriction>
 *   </complexContent>
 * </complexType>
 * }</pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "remapState"
})
@XmlRootElement(name = "remapStates")
public class RemapStates {

    /**
     * Contains a list of ports and values in remapPort and a list of registers and values that when all evaluate to true which tell the decoder to enter this remap state. The name attribute identifies the name of the state. If a list of remapPorts and/or remapRegisters is not defined then the condition for that state cannot be defined.
     * 
     */
    @XmlElement(required = true)
    protected List<RemapStates.RemapState> remapState;

    /**
     * Contains a list of ports and values in remapPort and a list of registers and values that when all evaluate to true which tell the decoder to enter this remap state. The name attribute identifies the name of the state. If a list of remapPorts and/or remapRegisters is not defined then the condition for that state cannot be defined.
     * 
     * Gets the value of the remapState property.
     * 
     * <p>This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the remapState property.</p>
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * </p>
     * <pre>
     * getRemapState().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link RemapStates.RemapState }
     * </p>
     * 
     * 
     * @return
     *     The value of the remapState property.
     */
    public List<RemapStates.RemapState> getRemapState() {
        if (remapState == null) {
            remapState = new ArrayList<>();
        }
        return this.remapState;
    }


    /**
     * <p>Java class for anonymous complex type</p>.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.</p>
     * 
     * <pre>{@code
     * <complexType>
     *   <complexContent>
     *     <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       <sequence>
     *         <group ref="{http://www.spiritconsortium.org/XMLSchema/SPIRIT/1685-2009}nameGroup"/>
     *         <element name="remapPorts" minOccurs="0">
     *           <complexType>
     *             <complexContent>
     *               <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *                 <sequence>
     *                   <element name="remapPort" maxOccurs="unbounded">
     *                     <complexType>
     *                       <simpleContent>
     *                         <extension base="<http://www.spiritconsortium.org/XMLSchema/SPIRIT/1685-2009>scaledNonNegativeInteger">
     *                           <attribute name="portNameRef" use="required" type="{http://www.spiritconsortium.org/XMLSchema/SPIRIT/1685-2009}portName" />
     *                           <attribute name="portIndex" type="{http://www.w3.org/2001/XMLSchema}nonNegativeInteger" />
     *                         </extension>
     *                       </simpleContent>
     *                     </complexType>
     *                   </element>
     *                 </sequence>
     *               </restriction>
     *             </complexContent>
     *           </complexType>
     *         </element>
     *       </sequence>
     *     </restriction>
     *   </complexContent>
     * </complexType>
     * }</pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "name",
        "displayName",
        "description",
        "remapPorts"
    })
    public static class RemapState {

        /**
         * Unique name
         * 
         */
        @XmlElement(required = true)
        @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
        @XmlSchemaType(name = "Name")
        protected String name;
        /**
         * Element name for display purposes. Typically a few words providing a more detailed and/or user-friendly name than the spirit:name.
         * 
         */
        protected String displayName;
        /**
         * Full description string, typically for documentation
         * 
         */
        protected String description;
        /**
         * List of ports and their values that shall invoke this remap state.
         * 
         */
        protected RemapStates.RemapState.RemapPorts remapPorts;

        /**
         * Unique name
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getName() {
            return name;
        }

        /**
         * Sets the value of the name property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         * @see #getName()
         */
        public void setName(String value) {
            this.name = value;
        }

        /**
         * Element name for display purposes. Typically a few words providing a more detailed and/or user-friendly name than the spirit:name.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getDisplayName() {
            return displayName;
        }

        /**
         * Sets the value of the displayName property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         * @see #getDisplayName()
         */
        public void setDisplayName(String value) {
            this.displayName = value;
        }

        /**
         * Full description string, typically for documentation
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getDescription() {
            return description;
        }

        /**
         * Sets the value of the description property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         * @see #getDescription()
         */
        public void setDescription(String value) {
            this.description = value;
        }

        /**
         * List of ports and their values that shall invoke this remap state.
         * 
         * @return
         *     possible object is
         *     {@link RemapStates.RemapState.RemapPorts }
         *     
         */
        public RemapStates.RemapState.RemapPorts getRemapPorts() {
            return remapPorts;
        }

        /**
         * Sets the value of the remapPorts property.
         * 
         * @param value
         *     allowed object is
         *     {@link RemapStates.RemapState.RemapPorts }
         *     
         * @see #getRemapPorts()
         */
        public void setRemapPorts(RemapStates.RemapState.RemapPorts value) {
            this.remapPorts = value;
        }


        /**
         * <p>Java class for anonymous complex type</p>.
         * 
         * <p>The following schema fragment specifies the expected content contained within this class.</p>
         * 
         * <pre>{@code
         * <complexType>
         *   <complexContent>
         *     <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
         *       <sequence>
         *         <element name="remapPort" maxOccurs="unbounded">
         *           <complexType>
         *             <simpleContent>
         *               <extension base="<http://www.spiritconsortium.org/XMLSchema/SPIRIT/1685-2009>scaledNonNegativeInteger">
         *                 <attribute name="portNameRef" use="required" type="{http://www.spiritconsortium.org/XMLSchema/SPIRIT/1685-2009}portName" />
         *                 <attribute name="portIndex" type="{http://www.w3.org/2001/XMLSchema}nonNegativeInteger" />
         *               </extension>
         *             </simpleContent>
         *           </complexType>
         *         </element>
         *       </sequence>
         *     </restriction>
         *   </complexContent>
         * </complexType>
         * }</pre>
         * 
         * 
         */
        @XmlAccessorType(XmlAccessType.FIELD)
        @XmlType(name = "", propOrder = {
            "remapPort"
        })
        public static class RemapPorts {

            /**
             * Contains the name and value of a port on the component, the value indicates the logic value which this port must take to effect the remapping. The portMapRef attribute stores the name of the port which takes that value.
             * 
             */
            @XmlElement(required = true)
            protected List<RemapStates.RemapState.RemapPorts.RemapPort> remapPort;

            /**
             * Contains the name and value of a port on the component, the value indicates the logic value which this port must take to effect the remapping. The portMapRef attribute stores the name of the port which takes that value.
             * 
             * Gets the value of the remapPort property.
             * 
             * <p>This accessor method returns a reference to the live list,
             * not a snapshot. Therefore any modification you make to the
             * returned list will be present inside the JAXB object.
             * This is why there is not a <CODE>set</CODE> method for the remapPort property.</p>
             * 
             * <p>
             * For example, to add a new item, do as follows:
             * </p>
             * <pre>
             * getRemapPort().add(newItem);
             * </pre>
             * 
             * 
             * <p>
             * Objects of the following type(s) are allowed in the list
             * {@link RemapStates.RemapState.RemapPorts.RemapPort }
             * </p>
             * 
             * 
             * @return
             *     The value of the remapPort property.
             */
            public List<RemapStates.RemapState.RemapPorts.RemapPort> getRemapPort() {
                if (remapPort == null) {
                    remapPort = new ArrayList<>();
                }
                return this.remapPort;
            }


            /**
             * <p>Java class for anonymous complex type</p>.
             * 
             * <p>The following schema fragment specifies the expected content contained within this class.</p>
             * 
             * <pre>{@code
             * <complexType>
             *   <simpleContent>
             *     <extension base="<http://www.spiritconsortium.org/XMLSchema/SPIRIT/1685-2009>scaledNonNegativeInteger">
             *       <attribute name="portNameRef" use="required" type="{http://www.spiritconsortium.org/XMLSchema/SPIRIT/1685-2009}portName" />
             *       <attribute name="portIndex" type="{http://www.w3.org/2001/XMLSchema}nonNegativeInteger" />
             *     </extension>
             *   </simpleContent>
             * </complexType>
             * }</pre>
             * 
             * 
             */
            @XmlAccessorType(XmlAccessType.FIELD)
            @XmlType(name = "", propOrder = {
                "value"
            })
            public static class RemapPort {

                /**
                 * A scaled nonnegative integer that consists of the value set {0, 1, ...}.  It is derived from scaledInteger and it supports a magnitude scale suffix of upper or lower case K (kilo=2^10), M (mega=2^20), G (giga=2^30) or T (tera=2^40).
                 * 
                 */
                @XmlValue
                protected String value;
                /**
                 * This attribute identifies a signal on the component which affects the component's memory layout
                 * 
                 */
                @XmlAttribute(name = "portNameRef", namespace = "http://www.spiritconsortium.org/XMLSchema/SPIRIT/1685-2009", required = true)
                protected String portNameRef;
                /**
                 * Index for a vectored type port. Must be a number between left and right for the port.
                 * 
                 */
                @XmlAttribute(name = "portIndex", namespace = "http://www.spiritconsortium.org/XMLSchema/SPIRIT/1685-2009")
                @XmlSchemaType(name = "nonNegativeInteger")
                protected BigInteger portIndex;

                /**
                 * A scaled nonnegative integer that consists of the value set {0, 1, ...}.  It is derived from scaledInteger and it supports a magnitude scale suffix of upper or lower case K (kilo=2^10), M (mega=2^20), G (giga=2^30) or T (tera=2^40).
                 * 
                 * @return
                 *     possible object is
                 *     {@link String }
                 *     
                 */
                public String getValue() {
                    return value;
                }

                /**
                 * Sets the value of the value property.
                 * 
                 * @param value
                 *     allowed object is
                 *     {@link String }
                 *     
                 * @see #getValue()
                 */
                public void setValue(String value) {
                    this.value = value;
                }

                /**
                 * This attribute identifies a signal on the component which affects the component's memory layout
                 * 
                 * @return
                 *     possible object is
                 *     {@link String }
                 *     
                 */
                public String getPortNameRef() {
                    return portNameRef;
                }

                /**
                 * Sets the value of the portNameRef property.
                 * 
                 * @param value
                 *     allowed object is
                 *     {@link String }
                 *     
                 * @see #getPortNameRef()
                 */
                public void setPortNameRef(String value) {
                    this.portNameRef = value;
                }

                /**
                 * Index for a vectored type port. Must be a number between left and right for the port.
                 * 
                 * @return
                 *     possible object is
                 *     {@link BigInteger }
                 *     
                 */
                public BigInteger getPortIndex() {
                    return portIndex;
                }

                /**
                 * Sets the value of the portIndex property.
                 * 
                 * @param value
                 *     allowed object is
                 *     {@link BigInteger }
                 *     
                 * @see #getPortIndex()
                 */
                public void setPortIndex(BigInteger value) {
                    this.portIndex = value;
                }

            }

        }

    }

}
