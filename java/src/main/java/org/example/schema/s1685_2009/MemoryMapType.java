//
// This file was generated by the Eclipse Implementation of JAXB, v4.0.5 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
//


package org.example.schema.s1685_2009;

import java.math.BigInteger;
import java.util.ArrayList;
import java.util.List;
import jakarta.xml.bind.annotation.XmlAccessType;
import jakarta.xml.bind.annotation.XmlAccessorType;
import jakarta.xml.bind.annotation.XmlAttribute;
import jakarta.xml.bind.annotation.XmlElement;
import jakarta.xml.bind.annotation.XmlElements;
import jakarta.xml.bind.annotation.XmlID;
import jakarta.xml.bind.annotation.XmlSchemaType;
import jakarta.xml.bind.annotation.XmlType;
import jakarta.xml.bind.annotation.adapters.CollapsedStringAdapter;
import jakarta.xml.bind.annotation.adapters.XmlJavaTypeAdapter;


/**
 * Map of address space blocks on slave slave bus interface.
 * 
 * <p>Java class for memoryMapType complex type</p>.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.</p>
 * 
 * <pre>{@code
 * <complexType name="memoryMapType">
 *   <complexContent>
 *     <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       <sequence>
 *         <group ref="{http://www.spiritconsortium.org/XMLSchema/SPIRIT/1685-2009}nameGroup"/>
 *         <group ref="{http://www.spiritconsortium.org/XMLSchema/SPIRIT/1685-2009}memoryMap" maxOccurs="unbounded" minOccurs="0"/>
 *         <element name="memoryRemap" type="{http://www.spiritconsortium.org/XMLSchema/SPIRIT/1685-2009}memoryRemapType" maxOccurs="unbounded" minOccurs="0"/>
 *         <element ref="{http://www.spiritconsortium.org/XMLSchema/SPIRIT/1685-2009}addressUnitBits" minOccurs="0"/>
 *         <element ref="{http://www.spiritconsortium.org/XMLSchema/SPIRIT/1685-2009}vendorExtensions" minOccurs="0"/>
 *       </sequence>
 *       <attribute ref="{http://www.spiritconsortium.org/XMLSchema/SPIRIT/1685-2009}id"/>
 *     </restriction>
 *   </complexContent>
 * </complexType>
 * }</pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "memoryMapType", propOrder = {
    "name",
    "displayName",
    "description",
    "memoryMap",
    "memoryRemap",
    "addressUnitBits",
    "vendorExtensions"
})
public class MemoryMapType {

    /**
     * Unique name
     * 
     */
    @XmlElement(required = true)
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    @XmlSchemaType(name = "Name")
    protected String name;
    /**
     * Element name for display purposes. Typically a few words providing a more detailed and/or user-friendly name than the spirit:name.
     * 
     */
    protected String displayName;
    /**
     * Full description string, typically for documentation
     * 
     */
    protected String description;
    /**
     * A group elements for a memoryMap
     * 
     */
    @XmlElements({
        @XmlElement(name = "addressBlock", type = AddressBlockType.class),
        @XmlElement(name = "bank", type = AddressBankType.class),
        @XmlElement(name = "subspaceMap", type = SubspaceRefType.class)
    })
    protected List<Object> memoryMap;
    /**
     * Additional memory map elements that are dependent on the component state.
     * 
     */
    protected List<MemoryRemapType> memoryRemap;
    /**
     * The number of data bits in an addressable unit. The default is byte addressable (8 bits).
     * 
     */
    @XmlSchemaType(name = "positiveInteger")
    protected BigInteger addressUnitBits;
    /**
     * Container for vendor specific extensions.
     * 
     */
    protected VendorExtensions vendorExtensions;
    /**
     * ID attribute for uniquely identifying an element within its document. On elements with spirit:resolve attribute is used to refer to this element and otherwise can be used as a documentation ID.
     * 
     */
    @XmlAttribute(name = "id", namespace = "http://www.spiritconsortium.org/XMLSchema/SPIRIT/1685-2009")
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    @XmlID
    @XmlSchemaType(name = "ID")
    protected String id;

    /**
     * Unique name
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getName() {
        return name;
    }

    /**
     * Sets the value of the name property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     * @see #getName()
     */
    public void setName(String value) {
        this.name = value;
    }

    /**
     * Element name for display purposes. Typically a few words providing a more detailed and/or user-friendly name than the spirit:name.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getDisplayName() {
        return displayName;
    }

    /**
     * Sets the value of the displayName property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     * @see #getDisplayName()
     */
    public void setDisplayName(String value) {
        this.displayName = value;
    }

    /**
     * Full description string, typically for documentation
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getDescription() {
        return description;
    }

    /**
     * Sets the value of the description property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     * @see #getDescription()
     */
    public void setDescription(String value) {
        this.description = value;
    }

    /**
     * A group elements for a memoryMap
     * 
     * Gets the value of the memoryMap property.
     * 
     * <p>This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the memoryMap property.</p>
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * </p>
     * <pre>
     * getMemoryMap().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link AddressBankType }
     * {@link AddressBlockType }
     * {@link SubspaceRefType }
     * </p>
     * 
     * 
     * @return
     *     The value of the memoryMap property.
     */
    public List<Object> getMemoryMap() {
        if (memoryMap == null) {
            memoryMap = new ArrayList<>();
        }
        return this.memoryMap;
    }

    /**
     * Additional memory map elements that are dependent on the component state.
     * 
     * Gets the value of the memoryRemap property.
     * 
     * <p>This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the memoryRemap property.</p>
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * </p>
     * <pre>
     * getMemoryRemap().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link MemoryRemapType }
     * </p>
     * 
     * 
     * @return
     *     The value of the memoryRemap property.
     */
    public List<MemoryRemapType> getMemoryRemap() {
        if (memoryRemap == null) {
            memoryRemap = new ArrayList<>();
        }
        return this.memoryRemap;
    }

    /**
     * The number of data bits in an addressable unit. The default is byte addressable (8 bits).
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getAddressUnitBits() {
        return addressUnitBits;
    }

    /**
     * Sets the value of the addressUnitBits property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     * @see #getAddressUnitBits()
     */
    public void setAddressUnitBits(BigInteger value) {
        this.addressUnitBits = value;
    }

    /**
     * Container for vendor specific extensions.
     * 
     * @return
     *     possible object is
     *     {@link VendorExtensions }
     *     
     */
    public VendorExtensions getVendorExtensions() {
        return vendorExtensions;
    }

    /**
     * Sets the value of the vendorExtensions property.
     * 
     * @param value
     *     allowed object is
     *     {@link VendorExtensions }
     *     
     * @see #getVendorExtensions()
     */
    public void setVendorExtensions(VendorExtensions value) {
        this.vendorExtensions = value;
    }

    /**
     * ID attribute for uniquely identifying an element within its document. On elements with spirit:resolve attribute is used to refer to this element and otherwise can be used as a documentation ID.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getId() {
        return id;
    }

    /**
     * Sets the value of the id property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     * @see #getId()
     */
    public void setId(String value) {
        this.id = value;
    }

}
