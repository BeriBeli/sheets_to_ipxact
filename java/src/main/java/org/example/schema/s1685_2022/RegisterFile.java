//
// This file was generated by the Eclipse Implementation of JAXB, v4.0.5 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
//


package org.example.schema.s1685_2022;

import java.util.ArrayList;
import java.util.List;
import jakarta.xml.bind.annotation.XmlAccessType;
import jakarta.xml.bind.annotation.XmlAccessorType;
import jakarta.xml.bind.annotation.XmlAttribute;
import jakarta.xml.bind.annotation.XmlElement;
import jakarta.xml.bind.annotation.XmlElements;
import jakarta.xml.bind.annotation.XmlID;
import jakarta.xml.bind.annotation.XmlRootElement;
import jakarta.xml.bind.annotation.XmlSchemaType;
import jakarta.xml.bind.annotation.XmlType;
import jakarta.xml.bind.annotation.XmlValue;
import jakarta.xml.bind.annotation.adapters.CollapsedStringAdapter;
import jakarta.xml.bind.annotation.adapters.XmlJavaTypeAdapter;


/**
 * <p>Java class for anonymous complex type</p>.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.</p>
 * 
 * <pre>{@code
 * <complexType>
 *   <complexContent>
 *     <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       <sequence>
 *         <group ref="{http://www.accellera.org/XMLSchema/IPXACT/1685-2022}nameGroup"/>
 *         <element name="accessHandles" minOccurs="0">
 *           <complexType>
 *             <complexContent>
 *               <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                 <sequence maxOccurs="unbounded">
 *                   <element name="accessHandle" type="{http://www.accellera.org/XMLSchema/IPXACT/1685-2022}simpleAccessHandle"/>
 *                 </sequence>
 *               </restriction>
 *             </complexContent>
 *           </complexType>
 *         </element>
 *         <element ref="{http://www.accellera.org/XMLSchema/IPXACT/1685-2022}array" minOccurs="0"/>
 *         <element name="addressOffset" type="{http://www.accellera.org/XMLSchema/IPXACT/1685-2022}unsignedLongintExpression"/>
 *         <choice>
 *           <element name="registerFileDefinitionRef">
 *             <complexType>
 *               <simpleContent>
 *                 <extension base="<http://www.w3.org/2001/XMLSchema>Name">
 *                   <attribute name="typeDefinitions" use="required" type="{http://www.w3.org/2001/XMLSchema}Name" />
 *                 </extension>
 *               </simpleContent>
 *             </complexType>
 *           </element>
 *           <group ref="{http://www.accellera.org/XMLSchema/IPXACT/1685-2022}registerFileDefinitionGroup"/>
 *         </choice>
 *         <element ref="{http://www.accellera.org/XMLSchema/IPXACT/1685-2022}parameters" minOccurs="0"/>
 *         <element ref="{http://www.accellera.org/XMLSchema/IPXACT/1685-2022}vendorExtensions" minOccurs="0"/>
 *       </sequence>
 *       <attGroup ref="{http://www.accellera.org/XMLSchema/IPXACT/1685-2022}id.att"/>
 *     </restriction>
 *   </complexContent>
 * </complexType>
 * }</pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "name",
    "displayName",
    "shortDescription",
    "description",
    "accessHandles",
    "array",
    "addressOffset",
    "registerFileDefinitionRef",
    "typeIdentifier",
    "range",
    "accessPolicies",
    "registerData",
    "parameters",
    "vendorExtensions"
})
@XmlRootElement(name = "registerFile")
public class RegisterFile {

    /**
     * Unique name
     * 
     */
    @XmlElement(required = true)
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    @XmlSchemaType(name = "Name")
    protected String name;
    /**
     * Element name for display purposes. Typically a few words providing a more detailed and/or user-friendly name than the ipxact:name.
     * 
     */
    protected String displayName;
    /**
     * Brief description suitable for titles, software comments and pop-up windows. Being a SystemVerilog expression the text can be constructed using parameters, e.g, by concatentation or $sformatf().
     * 
     */
    protected String shortDescription;
    /**
     * Full description string, typically for documentation
     * 
     */
    protected String description;
    protected RegisterFile.AccessHandles accessHandles;
    protected Array array;
    /**
     * Offset from the address block's baseAddress or the containing register file's addressOffset, expressed as the number of addressUnitBits from the containing memoryMap or localMemoryMap.
     * 
     */
    @XmlElement(required = true)
    protected UnsignedLongintExpression addressOffset;
    protected RegisterFile.RegisterFileDefinitionRef registerFileDefinitionRef;
    /**
     * Identifier name used to indicate that multiple registerFile elements contain the exact same information except for the elements in the registerFileInstanceGroup.
     * 
     */
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    @XmlSchemaType(name = "Name")
    protected String typeIdentifier;
    /**
     * The range of a register file.  Expressed as the number of addressable units accessible to the block. Specified in units of addressUnitBits.
     * 
     */
    protected UnsignedPositiveLongintExpression range;
    protected AccessPolicies accessPolicies;
    /**
     * This group of optional elements describes the memory mapped registers of an address block
     * 
     */
    @XmlElements({
        @XmlElement(name = "register", type = RegisterFile.Register.class),
        @XmlElement(name = "registerFile", type = RegisterFile.class)
    })
    protected List<Object> registerData;
    /**
     * A collection of parameters and associated value assertions.
     * 
     */
    protected Parameters parameters;
    /**
     * Container for vendor specific extensions.
     * 
     */
    protected VendorExtensions vendorExtensions;
    /**
     * A generic mechanism for annotating elements with unique identifiers. See: http://www.w3.org/TR/xml-id/ for more information.
     * 
     */
    @XmlAttribute(name = "id", namespace = "http://www.w3.org/XML/1998/namespace")
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    @XmlID
    @XmlSchemaType(name = "ID")
    protected String id;

    /**
     * Unique name
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getName() {
        return name;
    }

    /**
     * Sets the value of the name property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     * @see #getName()
     */
    public void setName(String value) {
        this.name = value;
    }

    /**
     * Element name for display purposes. Typically a few words providing a more detailed and/or user-friendly name than the ipxact:name.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getDisplayName() {
        return displayName;
    }

    /**
     * Sets the value of the displayName property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     * @see #getDisplayName()
     */
    public void setDisplayName(String value) {
        this.displayName = value;
    }

    /**
     * Brief description suitable for titles, software comments and pop-up windows. Being a SystemVerilog expression the text can be constructed using parameters, e.g, by concatentation or $sformatf().
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getShortDescription() {
        return shortDescription;
    }

    /**
     * Sets the value of the shortDescription property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     * @see #getShortDescription()
     */
    public void setShortDescription(String value) {
        this.shortDescription = value;
    }

    /**
     * Full description string, typically for documentation
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getDescription() {
        return description;
    }

    /**
     * Sets the value of the description property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     * @see #getDescription()
     */
    public void setDescription(String value) {
        this.description = value;
    }

    /**
     * Gets the value of the accessHandles property.
     * 
     * @return
     *     possible object is
     *     {@link RegisterFile.AccessHandles }
     *     
     */
    public RegisterFile.AccessHandles getAccessHandles() {
        return accessHandles;
    }

    /**
     * Sets the value of the accessHandles property.
     * 
     * @param value
     *     allowed object is
     *     {@link RegisterFile.AccessHandles }
     *     
     */
    public void setAccessHandles(RegisterFile.AccessHandles value) {
        this.accessHandles = value;
    }

    /**
     * Gets the value of the array property.
     * 
     * @return
     *     possible object is
     *     {@link Array }
     *     
     */
    public Array getArray() {
        return array;
    }

    /**
     * Sets the value of the array property.
     * 
     * @param value
     *     allowed object is
     *     {@link Array }
     *     
     */
    public void setArray(Array value) {
        this.array = value;
    }

    /**
     * Offset from the address block's baseAddress or the containing register file's addressOffset, expressed as the number of addressUnitBits from the containing memoryMap or localMemoryMap.
     * 
     * @return
     *     possible object is
     *     {@link UnsignedLongintExpression }
     *     
     */
    public UnsignedLongintExpression getAddressOffset() {
        return addressOffset;
    }

    /**
     * Sets the value of the addressOffset property.
     * 
     * @param value
     *     allowed object is
     *     {@link UnsignedLongintExpression }
     *     
     * @see #getAddressOffset()
     */
    public void setAddressOffset(UnsignedLongintExpression value) {
        this.addressOffset = value;
    }

    /**
     * Gets the value of the registerFileDefinitionRef property.
     * 
     * @return
     *     possible object is
     *     {@link RegisterFile.RegisterFileDefinitionRef }
     *     
     */
    public RegisterFile.RegisterFileDefinitionRef getRegisterFileDefinitionRef() {
        return registerFileDefinitionRef;
    }

    /**
     * Sets the value of the registerFileDefinitionRef property.
     * 
     * @param value
     *     allowed object is
     *     {@link RegisterFile.RegisterFileDefinitionRef }
     *     
     */
    public void setRegisterFileDefinitionRef(RegisterFile.RegisterFileDefinitionRef value) {
        this.registerFileDefinitionRef = value;
    }

    /**
     * Identifier name used to indicate that multiple registerFile elements contain the exact same information except for the elements in the registerFileInstanceGroup.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getTypeIdentifier() {
        return typeIdentifier;
    }

    /**
     * Sets the value of the typeIdentifier property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     * @see #getTypeIdentifier()
     */
    public void setTypeIdentifier(String value) {
        this.typeIdentifier = value;
    }

    /**
     * The range of a register file.  Expressed as the number of addressable units accessible to the block. Specified in units of addressUnitBits.
     * 
     * @return
     *     possible object is
     *     {@link UnsignedPositiveLongintExpression }
     *     
     */
    public UnsignedPositiveLongintExpression getRange() {
        return range;
    }

    /**
     * Sets the value of the range property.
     * 
     * @param value
     *     allowed object is
     *     {@link UnsignedPositiveLongintExpression }
     *     
     * @see #getRange()
     */
    public void setRange(UnsignedPositiveLongintExpression value) {
        this.range = value;
    }

    /**
     * Gets the value of the accessPolicies property.
     * 
     * @return
     *     possible object is
     *     {@link AccessPolicies }
     *     
     */
    public AccessPolicies getAccessPolicies() {
        return accessPolicies;
    }

    /**
     * Sets the value of the accessPolicies property.
     * 
     * @param value
     *     allowed object is
     *     {@link AccessPolicies }
     *     
     */
    public void setAccessPolicies(AccessPolicies value) {
        this.accessPolicies = value;
    }

    /**
     * This group of optional elements describes the memory mapped registers of an address block
     * 
     * Gets the value of the registerData property.
     * 
     * <p>This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the registerData property.</p>
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * </p>
     * <pre>
     * getRegisterData().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link RegisterFile }
     * {@link RegisterFile.Register }
     * </p>
     * 
     * 
     * @return
     *     The value of the registerData property.
     */
    public List<Object> getRegisterData() {
        if (registerData == null) {
            registerData = new ArrayList<>();
        }
        return this.registerData;
    }

    /**
     * A collection of parameters and associated value assertions.
     * 
     * @return
     *     possible object is
     *     {@link Parameters }
     *     
     */
    public Parameters getParameters() {
        return parameters;
    }

    /**
     * Sets the value of the parameters property.
     * 
     * @param value
     *     allowed object is
     *     {@link Parameters }
     *     
     * @see #getParameters()
     */
    public void setParameters(Parameters value) {
        this.parameters = value;
    }

    /**
     * Container for vendor specific extensions.
     * 
     * @return
     *     possible object is
     *     {@link VendorExtensions }
     *     
     */
    public VendorExtensions getVendorExtensions() {
        return vendorExtensions;
    }

    /**
     * Sets the value of the vendorExtensions property.
     * 
     * @param value
     *     allowed object is
     *     {@link VendorExtensions }
     *     
     * @see #getVendorExtensions()
     */
    public void setVendorExtensions(VendorExtensions value) {
        this.vendorExtensions = value;
    }

    /**
     * A generic mechanism for annotating elements with unique identifiers. See: http://www.w3.org/TR/xml-id/ for more information.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getId() {
        return id;
    }

    /**
     * Sets the value of the id property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     * @see #getId()
     */
    public void setId(String value) {
        this.id = value;
    }


    /**
     * <p>Java class for anonymous complex type</p>.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.</p>
     * 
     * <pre>{@code
     * <complexType>
     *   <complexContent>
     *     <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       <sequence maxOccurs="unbounded">
     *         <element name="accessHandle" type="{http://www.accellera.org/XMLSchema/IPXACT/1685-2022}simpleAccessHandle"/>
     *       </sequence>
     *     </restriction>
     *   </complexContent>
     * </complexType>
     * }</pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "accessHandle"
    })
    public static class AccessHandles {

        @XmlElement(required = true)
        protected List<SimpleAccessHandle> accessHandle;

        /**
         * Gets the value of the accessHandle property.
         * 
         * <p>This accessor method returns a reference to the live list,
         * not a snapshot. Therefore any modification you make to the
         * returned list will be present inside the JAXB object.
         * This is why there is not a <CODE>set</CODE> method for the accessHandle property.</p>
         * 
         * <p>
         * For example, to add a new item, do as follows:
         * </p>
         * <pre>
         * getAccessHandle().add(newItem);
         * </pre>
         * 
         * 
         * <p>
         * Objects of the following type(s) are allowed in the list
         * {@link SimpleAccessHandle }
         * </p>
         * 
         * 
         * @return
         *     The value of the accessHandle property.
         */
        public List<SimpleAccessHandle> getAccessHandle() {
            if (accessHandle == null) {
                accessHandle = new ArrayList<>();
            }
            return this.accessHandle;
        }

    }


    /**
     * <p>Java class for anonymous complex type</p>.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.</p>
     * 
     * <pre>{@code
     * <complexType>
     *   <complexContent>
     *     <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       <sequence>
     *         <group ref="{http://www.accellera.org/XMLSchema/IPXACT/1685-2022}nameGroup"/>
     *         <element name="accessHandles" minOccurs="0">
     *           <complexType>
     *             <complexContent>
     *               <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *                 <sequence maxOccurs="unbounded">
     *                   <element name="accessHandle" type="{http://www.accellera.org/XMLSchema/IPXACT/1685-2022}simpleAccessHandle"/>
     *                 </sequence>
     *               </restriction>
     *             </complexContent>
     *           </complexType>
     *         </element>
     *         <element ref="{http://www.accellera.org/XMLSchema/IPXACT/1685-2022}array" minOccurs="0"/>
     *         <element name="addressOffset" type="{http://www.accellera.org/XMLSchema/IPXACT/1685-2022}unsignedLongintExpression"/>
     *         <choice>
     *           <element name="registerDefinitionRef">
     *             <complexType>
     *               <simpleContent>
     *                 <extension base="<http://www.w3.org/2001/XMLSchema>Name">
     *                   <attribute name="typeDefinitions" use="required" type="{http://www.w3.org/2001/XMLSchema}Name" />
     *                 </extension>
     *               </simpleContent>
     *             </complexType>
     *           </element>
     *           <group ref="{http://www.accellera.org/XMLSchema/IPXACT/1685-2022}registerDefinitionGroup"/>
     *         </choice>
     *         <element ref="{http://www.accellera.org/XMLSchema/IPXACT/1685-2022}alternateRegisters" minOccurs="0"/>
     *         <element ref="{http://www.accellera.org/XMLSchema/IPXACT/1685-2022}parameters" minOccurs="0"/>
     *         <element ref="{http://www.accellera.org/XMLSchema/IPXACT/1685-2022}vendorExtensions" minOccurs="0"/>
     *       </sequence>
     *       <attGroup ref="{http://www.accellera.org/XMLSchema/IPXACT/1685-2022}id.att"/>
     *     </restriction>
     *   </complexContent>
     * </complexType>
     * }</pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "name",
        "displayName",
        "shortDescription",
        "description",
        "accessHandles",
        "array",
        "addressOffset",
        "registerDefinitionRef",
        "typeIdentifier",
        "size",
        "_volatile",
        "accessPolicies",
        "field",
        "alternateRegisters",
        "parameters",
        "vendorExtensions"
    })
    public static class Register {

        /**
         * Unique name
         * 
         */
        @XmlElement(required = true)
        @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
        @XmlSchemaType(name = "Name")
        protected String name;
        /**
         * Element name for display purposes. Typically a few words providing a more detailed and/or user-friendly name than the ipxact:name.
         * 
         */
        protected String displayName;
        /**
         * Brief description suitable for titles, software comments and pop-up windows. Being a SystemVerilog expression the text can be constructed using parameters, e.g, by concatentation or $sformatf().
         * 
         */
        protected String shortDescription;
        /**
         * Full description string, typically for documentation
         * 
         */
        protected String description;
        protected RegisterFile.Register.AccessHandles accessHandles;
        protected Array array;
        /**
         * Offset from the address block's baseAddress or the containing register file's addressOffset, expressed as the number of addressUnitBits from the containing memoryMap or localMemoryMap.
         * 
         */
        @XmlElement(required = true)
        protected UnsignedLongintExpression addressOffset;
        protected RegisterFile.Register.RegisterDefinitionRef registerDefinitionRef;
        /**
         * Identifier name used to indicate that multiple register elements contain the exact same information for the elements in the registerDefinitionGroup.
         * 
         */
        @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
        @XmlSchemaType(name = "Name")
        protected String typeIdentifier;
        /**
         * Width of the register in bits.
         * 
         */
        protected UnsignedPositiveIntExpression size;
        /**
         * Indicates whether the data is volatile.
         * 
         */
        @XmlElement(name = "volatile")
        protected Boolean _volatile;
        protected AccessPolicies accessPolicies;
        protected List<FieldType> field;
        /**
         * Alternate definitions for the current register
         * 
         */
        protected AlternateRegisters alternateRegisters;
        /**
         * A collection of parameters and associated value assertions.
         * 
         */
        protected Parameters parameters;
        /**
         * Container for vendor specific extensions.
         * 
         */
        protected VendorExtensions vendorExtensions;
        /**
         * A generic mechanism for annotating elements with unique identifiers. See: http://www.w3.org/TR/xml-id/ for more information.
         * 
         */
        @XmlAttribute(name = "id", namespace = "http://www.w3.org/XML/1998/namespace")
        @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
        @XmlID
        @XmlSchemaType(name = "ID")
        protected String id;

        /**
         * Unique name
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getName() {
            return name;
        }

        /**
         * Sets the value of the name property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         * @see #getName()
         */
        public void setName(String value) {
            this.name = value;
        }

        /**
         * Element name for display purposes. Typically a few words providing a more detailed and/or user-friendly name than the ipxact:name.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getDisplayName() {
            return displayName;
        }

        /**
         * Sets the value of the displayName property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         * @see #getDisplayName()
         */
        public void setDisplayName(String value) {
            this.displayName = value;
        }

        /**
         * Brief description suitable for titles, software comments and pop-up windows. Being a SystemVerilog expression the text can be constructed using parameters, e.g, by concatentation or $sformatf().
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getShortDescription() {
            return shortDescription;
        }

        /**
         * Sets the value of the shortDescription property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         * @see #getShortDescription()
         */
        public void setShortDescription(String value) {
            this.shortDescription = value;
        }

        /**
         * Full description string, typically for documentation
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getDescription() {
            return description;
        }

        /**
         * Sets the value of the description property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         * @see #getDescription()
         */
        public void setDescription(String value) {
            this.description = value;
        }

        /**
         * Gets the value of the accessHandles property.
         * 
         * @return
         *     possible object is
         *     {@link RegisterFile.Register.AccessHandles }
         *     
         */
        public RegisterFile.Register.AccessHandles getAccessHandles() {
            return accessHandles;
        }

        /**
         * Sets the value of the accessHandles property.
         * 
         * @param value
         *     allowed object is
         *     {@link RegisterFile.Register.AccessHandles }
         *     
         */
        public void setAccessHandles(RegisterFile.Register.AccessHandles value) {
            this.accessHandles = value;
        }

        /**
         * Gets the value of the array property.
         * 
         * @return
         *     possible object is
         *     {@link Array }
         *     
         */
        public Array getArray() {
            return array;
        }

        /**
         * Sets the value of the array property.
         * 
         * @param value
         *     allowed object is
         *     {@link Array }
         *     
         */
        public void setArray(Array value) {
            this.array = value;
        }

        /**
         * Offset from the address block's baseAddress or the containing register file's addressOffset, expressed as the number of addressUnitBits from the containing memoryMap or localMemoryMap.
         * 
         * @return
         *     possible object is
         *     {@link UnsignedLongintExpression }
         *     
         */
        public UnsignedLongintExpression getAddressOffset() {
            return addressOffset;
        }

        /**
         * Sets the value of the addressOffset property.
         * 
         * @param value
         *     allowed object is
         *     {@link UnsignedLongintExpression }
         *     
         * @see #getAddressOffset()
         */
        public void setAddressOffset(UnsignedLongintExpression value) {
            this.addressOffset = value;
        }

        /**
         * Gets the value of the registerDefinitionRef property.
         * 
         * @return
         *     possible object is
         *     {@link RegisterFile.Register.RegisterDefinitionRef }
         *     
         */
        public RegisterFile.Register.RegisterDefinitionRef getRegisterDefinitionRef() {
            return registerDefinitionRef;
        }

        /**
         * Sets the value of the registerDefinitionRef property.
         * 
         * @param value
         *     allowed object is
         *     {@link RegisterFile.Register.RegisterDefinitionRef }
         *     
         */
        public void setRegisterDefinitionRef(RegisterFile.Register.RegisterDefinitionRef value) {
            this.registerDefinitionRef = value;
        }

        /**
         * Identifier name used to indicate that multiple register elements contain the exact same information for the elements in the registerDefinitionGroup.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getTypeIdentifier() {
            return typeIdentifier;
        }

        /**
         * Sets the value of the typeIdentifier property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         * @see #getTypeIdentifier()
         */
        public void setTypeIdentifier(String value) {
            this.typeIdentifier = value;
        }

        /**
         * Width of the register in bits.
         * 
         * @return
         *     possible object is
         *     {@link UnsignedPositiveIntExpression }
         *     
         */
        public UnsignedPositiveIntExpression getSize() {
            return size;
        }

        /**
         * Sets the value of the size property.
         * 
         * @param value
         *     allowed object is
         *     {@link UnsignedPositiveIntExpression }
         *     
         * @see #getSize()
         */
        public void setSize(UnsignedPositiveIntExpression value) {
            this.size = value;
        }

        /**
         * Indicates whether the data is volatile.
         * 
         * @return
         *     possible object is
         *     {@link Boolean }
         *     
         */
        public Boolean isVolatile() {
            return _volatile;
        }

        /**
         * Sets the value of the volatile property.
         * 
         * @param value
         *     allowed object is
         *     {@link Boolean }
         *     
         * @see #isVolatile()
         */
        public void setVolatile(Boolean value) {
            this._volatile = value;
        }

        /**
         * Gets the value of the accessPolicies property.
         * 
         * @return
         *     possible object is
         *     {@link AccessPolicies }
         *     
         */
        public AccessPolicies getAccessPolicies() {
            return accessPolicies;
        }

        /**
         * Sets the value of the accessPolicies property.
         * 
         * @param value
         *     allowed object is
         *     {@link AccessPolicies }
         *     
         */
        public void setAccessPolicies(AccessPolicies value) {
            this.accessPolicies = value;
        }

        /**
         * Gets the value of the field property.
         * 
         * <p>This accessor method returns a reference to the live list,
         * not a snapshot. Therefore any modification you make to the
         * returned list will be present inside the JAXB object.
         * This is why there is not a <CODE>set</CODE> method for the field property.</p>
         * 
         * <p>
         * For example, to add a new item, do as follows:
         * </p>
         * <pre>
         * getField().add(newItem);
         * </pre>
         * 
         * 
         * <p>
         * Objects of the following type(s) are allowed in the list
         * {@link FieldType }
         * </p>
         * 
         * 
         * @return
         *     The value of the field property.
         */
        public List<FieldType> getField() {
            if (field == null) {
                field = new ArrayList<>();
            }
            return this.field;
        }

        /**
         * Alternate definitions for the current register
         * 
         * @return
         *     possible object is
         *     {@link AlternateRegisters }
         *     
         */
        public AlternateRegisters getAlternateRegisters() {
            return alternateRegisters;
        }

        /**
         * Sets the value of the alternateRegisters property.
         * 
         * @param value
         *     allowed object is
         *     {@link AlternateRegisters }
         *     
         * @see #getAlternateRegisters()
         */
        public void setAlternateRegisters(AlternateRegisters value) {
            this.alternateRegisters = value;
        }

        /**
         * A collection of parameters and associated value assertions.
         * 
         * @return
         *     possible object is
         *     {@link Parameters }
         *     
         */
        public Parameters getParameters() {
            return parameters;
        }

        /**
         * Sets the value of the parameters property.
         * 
         * @param value
         *     allowed object is
         *     {@link Parameters }
         *     
         * @see #getParameters()
         */
        public void setParameters(Parameters value) {
            this.parameters = value;
        }

        /**
         * Container for vendor specific extensions.
         * 
         * @return
         *     possible object is
         *     {@link VendorExtensions }
         *     
         */
        public VendorExtensions getVendorExtensions() {
            return vendorExtensions;
        }

        /**
         * Sets the value of the vendorExtensions property.
         * 
         * @param value
         *     allowed object is
         *     {@link VendorExtensions }
         *     
         * @see #getVendorExtensions()
         */
        public void setVendorExtensions(VendorExtensions value) {
            this.vendorExtensions = value;
        }

        /**
         * A generic mechanism for annotating elements with unique identifiers. See: http://www.w3.org/TR/xml-id/ for more information.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getId() {
            return id;
        }

        /**
         * Sets the value of the id property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         * @see #getId()
         */
        public void setId(String value) {
            this.id = value;
        }


        /**
         * <p>Java class for anonymous complex type</p>.
         * 
         * <p>The following schema fragment specifies the expected content contained within this class.</p>
         * 
         * <pre>{@code
         * <complexType>
         *   <complexContent>
         *     <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
         *       <sequence maxOccurs="unbounded">
         *         <element name="accessHandle" type="{http://www.accellera.org/XMLSchema/IPXACT/1685-2022}simpleAccessHandle"/>
         *       </sequence>
         *     </restriction>
         *   </complexContent>
         * </complexType>
         * }</pre>
         * 
         * 
         */
        @XmlAccessorType(XmlAccessType.FIELD)
        @XmlType(name = "", propOrder = {
            "accessHandle"
        })
        public static class AccessHandles {

            @XmlElement(required = true)
            protected List<SimpleAccessHandle> accessHandle;

            /**
             * Gets the value of the accessHandle property.
             * 
             * <p>This accessor method returns a reference to the live list,
             * not a snapshot. Therefore any modification you make to the
             * returned list will be present inside the JAXB object.
             * This is why there is not a <CODE>set</CODE> method for the accessHandle property.</p>
             * 
             * <p>
             * For example, to add a new item, do as follows:
             * </p>
             * <pre>
             * getAccessHandle().add(newItem);
             * </pre>
             * 
             * 
             * <p>
             * Objects of the following type(s) are allowed in the list
             * {@link SimpleAccessHandle }
             * </p>
             * 
             * 
             * @return
             *     The value of the accessHandle property.
             */
            public List<SimpleAccessHandle> getAccessHandle() {
                if (accessHandle == null) {
                    accessHandle = new ArrayList<>();
                }
                return this.accessHandle;
            }

        }


        /**
         * <p>Java class for anonymous complex type</p>.
         * 
         * <p>The following schema fragment specifies the expected content contained within this class.</p>
         * 
         * <pre>{@code
         * <complexType>
         *   <simpleContent>
         *     <extension base="<http://www.w3.org/2001/XMLSchema>Name">
         *       <attribute name="typeDefinitions" use="required" type="{http://www.w3.org/2001/XMLSchema}Name" />
         *     </extension>
         *   </simpleContent>
         * </complexType>
         * }</pre>
         * 
         * 
         */
        @XmlAccessorType(XmlAccessType.FIELD)
        @XmlType(name = "", propOrder = {
            "value"
        })
        public static class RegisterDefinitionRef {

            @XmlValue
            @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
            @XmlSchemaType(name = "Name")
            protected String value;
            @XmlAttribute(name = "typeDefinitions", required = true)
            @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
            @XmlSchemaType(name = "Name")
            protected String typeDefinitions;

            /**
             * Gets the value of the value property.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getValue() {
                return value;
            }

            /**
             * Sets the value of the value property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             */
            public void setValue(String value) {
                this.value = value;
            }

            /**
             * Gets the value of the typeDefinitions property.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getTypeDefinitions() {
                return typeDefinitions;
            }

            /**
             * Sets the value of the typeDefinitions property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             */
            public void setTypeDefinitions(String value) {
                this.typeDefinitions = value;
            }

        }

    }


    /**
     * <p>Java class for anonymous complex type</p>.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.</p>
     * 
     * <pre>{@code
     * <complexType>
     *   <simpleContent>
     *     <extension base="<http://www.w3.org/2001/XMLSchema>Name">
     *       <attribute name="typeDefinitions" use="required" type="{http://www.w3.org/2001/XMLSchema}Name" />
     *     </extension>
     *   </simpleContent>
     * </complexType>
     * }</pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "value"
    })
    public static class RegisterFileDefinitionRef {

        @XmlValue
        @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
        @XmlSchemaType(name = "Name")
        protected String value;
        @XmlAttribute(name = "typeDefinitions", required = true)
        @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
        @XmlSchemaType(name = "Name")
        protected String typeDefinitions;

        /**
         * Gets the value of the value property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getValue() {
            return value;
        }

        /**
         * Sets the value of the value property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setValue(String value) {
            this.value = value;
        }

        /**
         * Gets the value of the typeDefinitions property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getTypeDefinitions() {
            return typeDefinitions;
        }

        /**
         * Sets the value of the typeDefinitions property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setTypeDefinitions(String value) {
            this.typeDefinitions = value;
        }

    }

}
