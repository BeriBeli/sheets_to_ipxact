//
// This file was generated by the Eclipse Implementation of JAXB, v4.0.5 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
//


package org.example.schema.s1685_2022;

import java.util.ArrayList;
import java.util.List;
import jakarta.xml.bind.annotation.XmlAccessType;
import jakarta.xml.bind.annotation.XmlAccessorType;
import jakarta.xml.bind.annotation.XmlAttribute;
import jakarta.xml.bind.annotation.XmlElement;
import jakarta.xml.bind.annotation.XmlType;


/**
 * <p>Java class for abstractorPortStructuredType complex type</p>.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.</p>
 * 
 * <pre>{@code
 * <complexType name="abstractorPortStructuredType">
 *   <complexContent>
 *     <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       <sequence>
 *         <group ref="{http://www.accellera.org/XMLSchema/IPXACT/1685-2022}structTypeGroup"/>
 *         <element name="vectors" type="{http://www.accellera.org/XMLSchema/IPXACT/1685-2022}extendedVectorsType" minOccurs="0"/>
 *         <element name="subPorts">
 *           <complexType>
 *             <complexContent>
 *               <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                 <sequence>
 *                   <element name="subPort" type="{http://www.accellera.org/XMLSchema/IPXACT/1685-2022}abstractorSubPortType" maxOccurs="unbounded"/>
 *                 </sequence>
 *               </restriction>
 *             </complexContent>
 *           </complexType>
 *         </element>
 *         <element ref="{http://www.accellera.org/XMLSchema/IPXACT/1685-2022}structPortTypeDefs"/>
 *       </sequence>
 *       <attribute name="packed" type="{http://www.w3.org/2001/XMLSchema}boolean" default="true" />
 *     </restriction>
 *   </complexContent>
 * </complexType>
 * }</pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "abstractorPortStructuredType", propOrder = {
    "struct",
    "union",
    "_interface",
    "vectors",
    "subPorts",
    "structPortTypeDefs"
})
public class AbstractorPortStructuredType {

    protected AbstractorPortStructuredType.Struct struct;
    protected AbstractorPortStructuredType.Union union;
    @XmlElement(name = "interface")
    protected AbstractorPortStructuredType.Interface _interface;
    /**
     * Vectored information.
     * 
     */
    protected ExtendedVectorsType vectors;
    @XmlElement(required = true)
    protected AbstractorPortStructuredType.SubPorts subPorts;
    @XmlElement(required = true)
    protected StructPortTypeDefs structPortTypeDefs;
    /**
     * When not present or set to 'true' indicates that this structured port is 'packed'.  If present and set to 'false', indicates that this structured port is 'unpacked'.
     * 
     */
    @XmlAttribute(name = "packed")
    protected Boolean packed;

    /**
     * Gets the value of the struct property.
     * 
     * @return
     *     possible object is
     *     {@link AbstractorPortStructuredType.Struct }
     *     
     */
    public AbstractorPortStructuredType.Struct getStruct() {
        return struct;
    }

    /**
     * Sets the value of the struct property.
     * 
     * @param value
     *     allowed object is
     *     {@link AbstractorPortStructuredType.Struct }
     *     
     */
    public void setStruct(AbstractorPortStructuredType.Struct value) {
        this.struct = value;
    }

    /**
     * Gets the value of the union property.
     * 
     * @return
     *     possible object is
     *     {@link AbstractorPortStructuredType.Union }
     *     
     */
    public AbstractorPortStructuredType.Union getUnion() {
        return union;
    }

    /**
     * Sets the value of the union property.
     * 
     * @param value
     *     allowed object is
     *     {@link AbstractorPortStructuredType.Union }
     *     
     */
    public void setUnion(AbstractorPortStructuredType.Union value) {
        this.union = value;
    }

    /**
     * Gets the value of the interface property.
     * 
     * @return
     *     possible object is
     *     {@link AbstractorPortStructuredType.Interface }
     *     
     */
    public AbstractorPortStructuredType.Interface getInterface() {
        return _interface;
    }

    /**
     * Sets the value of the interface property.
     * 
     * @param value
     *     allowed object is
     *     {@link AbstractorPortStructuredType.Interface }
     *     
     */
    public void setInterface(AbstractorPortStructuredType.Interface value) {
        this._interface = value;
    }

    /**
     * Vectored information.
     * 
     * @return
     *     possible object is
     *     {@link ExtendedVectorsType }
     *     
     */
    public ExtendedVectorsType getVectors() {
        return vectors;
    }

    /**
     * Sets the value of the vectors property.
     * 
     * @param value
     *     allowed object is
     *     {@link ExtendedVectorsType }
     *     
     * @see #getVectors()
     */
    public void setVectors(ExtendedVectorsType value) {
        this.vectors = value;
    }

    /**
     * Gets the value of the subPorts property.
     * 
     * @return
     *     possible object is
     *     {@link AbstractorPortStructuredType.SubPorts }
     *     
     */
    public AbstractorPortStructuredType.SubPorts getSubPorts() {
        return subPorts;
    }

    /**
     * Sets the value of the subPorts property.
     * 
     * @param value
     *     allowed object is
     *     {@link AbstractorPortStructuredType.SubPorts }
     *     
     */
    public void setSubPorts(AbstractorPortStructuredType.SubPorts value) {
        this.subPorts = value;
    }

    /**
     * Gets the value of the structPortTypeDefs property.
     * 
     * @return
     *     possible object is
     *     {@link StructPortTypeDefs }
     *     
     */
    public StructPortTypeDefs getStructPortTypeDefs() {
        return structPortTypeDefs;
    }

    /**
     * Sets the value of the structPortTypeDefs property.
     * 
     * @param value
     *     allowed object is
     *     {@link StructPortTypeDefs }
     *     
     */
    public void setStructPortTypeDefs(StructPortTypeDefs value) {
        this.structPortTypeDefs = value;
    }

    /**
     * When not present or set to 'true' indicates that this structured port is 'packed'.  If present and set to 'false', indicates that this structured port is 'unpacked'.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public boolean isPacked() {
        if (packed == null) {
            return true;
        } else {
            return packed;
        }
    }

    /**
     * Sets the value of the packed property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     * @see #isPacked()
     */
    public void setPacked(Boolean value) {
        this.packed = value;
    }


    /**
     * <p>Java class for anonymous complex type</p>.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.</p>
     * 
     * <pre>{@code
     * <complexType>
     *   <complexContent>
     *     <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       <attribute name="phantom" type="{http://www.w3.org/2001/XMLSchema}boolean" />
     *     </restriction>
     *   </complexContent>
     * </complexType>
     * }</pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "")
    public static class Interface {

        @XmlAttribute(name = "phantom")
        protected Boolean phantom;

        /**
         * Gets the value of the phantom property.
         * 
         * @return
         *     possible object is
         *     {@link Boolean }
         *     
         */
        public Boolean isPhantom() {
            return phantom;
        }

        /**
         * Sets the value of the phantom property.
         * 
         * @param value
         *     allowed object is
         *     {@link Boolean }
         *     
         */
        public void setPhantom(Boolean value) {
            this.phantom = value;
        }

    }


    /**
     * <p>Java class for anonymous complex type</p>.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.</p>
     * 
     * <pre>{@code
     * <complexType>
     *   <complexContent>
     *     <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       <attribute name="direction" type="{http://www.accellera.org/XMLSchema/IPXACT/1685-2022}componentPortDirectionType" />
     *     </restriction>
     *   </complexContent>
     * </complexType>
     * }</pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "")
    public static class Struct {

        /**
         * The direction of a wire style port. The basic directions for a port are 'in' for input ports, 'out' for output port and 'inout' for bidirectional and tristate ports. 
         * A value of 'phantom' is also allowed and define a port that exist on the IP-XACT component but not on the HDL model.
         * 
         */
        @XmlAttribute(name = "direction")
        protected ComponentPortDirectionType direction;

        /**
         * The direction of a wire style port. The basic directions for a port are 'in' for input ports, 'out' for output port and 'inout' for bidirectional and tristate ports. 
         * A value of 'phantom' is also allowed and define a port that exist on the IP-XACT component but not on the HDL model.
         * 
         * @return
         *     possible object is
         *     {@link ComponentPortDirectionType }
         *     
         */
        public ComponentPortDirectionType getDirection() {
            return direction;
        }

        /**
         * Sets the value of the direction property.
         * 
         * @param value
         *     allowed object is
         *     {@link ComponentPortDirectionType }
         *     
         * @see #getDirection()
         */
        public void setDirection(ComponentPortDirectionType value) {
            this.direction = value;
        }

    }


    /**
     * <p>Java class for anonymous complex type</p>.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.</p>
     * 
     * <pre>{@code
     * <complexType>
     *   <complexContent>
     *     <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       <sequence>
     *         <element name="subPort" type="{http://www.accellera.org/XMLSchema/IPXACT/1685-2022}abstractorSubPortType" maxOccurs="unbounded"/>
     *       </sequence>
     *     </restriction>
     *   </complexContent>
     * </complexType>
     * }</pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "subPort"
    })
    public static class SubPorts {

        @XmlElement(required = true)
        protected List<AbstractorSubPortType> subPort;

        /**
         * Gets the value of the subPort property.
         * 
         * <p>This accessor method returns a reference to the live list,
         * not a snapshot. Therefore any modification you make to the
         * returned list will be present inside the JAXB object.
         * This is why there is not a <CODE>set</CODE> method for the subPort property.</p>
         * 
         * <p>
         * For example, to add a new item, do as follows:
         * </p>
         * <pre>
         * getSubPort().add(newItem);
         * </pre>
         * 
         * 
         * <p>
         * Objects of the following type(s) are allowed in the list
         * {@link AbstractorSubPortType }
         * </p>
         * 
         * 
         * @return
         *     The value of the subPort property.
         */
        public List<AbstractorSubPortType> getSubPort() {
            if (subPort == null) {
                subPort = new ArrayList<>();
            }
            return this.subPort;
        }

    }


    /**
     * <p>Java class for anonymous complex type</p>.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.</p>
     * 
     * <pre>{@code
     * <complexType>
     *   <complexContent>
     *     <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       <attribute name="direction" type="{http://www.accellera.org/XMLSchema/IPXACT/1685-2022}componentPortDirectionType" />
     *     </restriction>
     *   </complexContent>
     * </complexType>
     * }</pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "")
    public static class Union {

        /**
         * The direction of a wire style port. The basic directions for a port are 'in' for input ports, 'out' for output port and 'inout' for bidirectional and tristate ports. 
         * A value of 'phantom' is also allowed and define a port that exist on the IP-XACT component but not on the HDL model.
         * 
         */
        @XmlAttribute(name = "direction")
        protected ComponentPortDirectionType direction;

        /**
         * The direction of a wire style port. The basic directions for a port are 'in' for input ports, 'out' for output port and 'inout' for bidirectional and tristate ports. 
         * A value of 'phantom' is also allowed and define a port that exist on the IP-XACT component but not on the HDL model.
         * 
         * @return
         *     possible object is
         *     {@link ComponentPortDirectionType }
         *     
         */
        public ComponentPortDirectionType getDirection() {
            return direction;
        }

        /**
         * Sets the value of the direction property.
         * 
         * @param value
         *     allowed object is
         *     {@link ComponentPortDirectionType }
         *     
         * @see #getDirection()
         */
        public void setDirection(ComponentPortDirectionType value) {
            this.direction = value;
        }

    }

}
