//
// This file was generated by the Eclipse Implementation of JAXB, v4.0.5 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
//


package org.example.schema.s1685_2022;

import jakarta.xml.bind.annotation.XmlAccessType;
import jakarta.xml.bind.annotation.XmlAccessorType;
import jakarta.xml.bind.annotation.XmlAttribute;
import jakarta.xml.bind.annotation.XmlElement;
import jakarta.xml.bind.annotation.XmlID;
import jakarta.xml.bind.annotation.XmlSchemaType;
import jakarta.xml.bind.annotation.XmlType;
import jakarta.xml.bind.annotation.adapters.CollapsedStringAdapter;
import jakarta.xml.bind.annotation.adapters.XmlJavaTypeAdapter;


/**
 * <p>Java class for fileBuilderType complex type</p>.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.</p>
 * 
 * <pre>{@code
 * <complexType name="fileBuilderType">
 *   <complexContent>
 *     <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       <sequence>
 *         <element ref="{http://www.accellera.org/XMLSchema/IPXACT/1685-2022}fileType"/>
 *         <element name="command" type="{http://www.accellera.org/XMLSchema/IPXACT/1685-2022}stringExpression" minOccurs="0"/>
 *         <element name="flags" type="{http://www.accellera.org/XMLSchema/IPXACT/1685-2022}stringExpression" minOccurs="0"/>
 *         <element name="replaceDefaultFlags" type="{http://www.accellera.org/XMLSchema/IPXACT/1685-2022}unsignedBitExpression" minOccurs="0"/>
 *       </sequence>
 *       <attGroup ref="{http://www.accellera.org/XMLSchema/IPXACT/1685-2022}id.att"/>
 *     </restriction>
 *   </complexContent>
 * </complexType>
 * }</pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "fileBuilderType", propOrder = {
    "fileType",
    "command",
    "flags",
    "replaceDefaultFlags"
})
public class FileBuilderType {

    /**
     * Enumerated file types known by IP-XACT.
     * 
     */
    @XmlElement(required = true)
    protected FileType fileType;
    /**
     * Default command used to build files of the specified fileType.
     * 
     */
    protected StringExpression command;
    /**
     * Flags given to the build command when building files of this type.
     * 
     */
    protected StringExpression flags;
    /**
     * If true, replace any default flags value with the value in the sibling flags element. Otherwise, append the contents of the sibling flags element to any default flags value.
     * 
     * If the value is true and the "flags" element is empty or missing, this will have the result of clearing any default flags value.
     * 
     */
    protected UnsignedBitExpression replaceDefaultFlags;
    /**
     * A generic mechanism for annotating elements with unique identifiers. See: http://www.w3.org/TR/xml-id/ for more information.
     * 
     */
    @XmlAttribute(name = "id", namespace = "http://www.w3.org/XML/1998/namespace")
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    @XmlID
    @XmlSchemaType(name = "ID")
    protected String id;

    /**
     * Enumerated file types known by IP-XACT.
     * 
     * @return
     *     possible object is
     *     {@link FileType }
     *     
     */
    public FileType getFileType() {
        return fileType;
    }

    /**
     * Sets the value of the fileType property.
     * 
     * @param value
     *     allowed object is
     *     {@link FileType }
     *     
     * @see #getFileType()
     */
    public void setFileType(FileType value) {
        this.fileType = value;
    }

    /**
     * Default command used to build files of the specified fileType.
     * 
     * @return
     *     possible object is
     *     {@link StringExpression }
     *     
     */
    public StringExpression getCommand() {
        return command;
    }

    /**
     * Sets the value of the command property.
     * 
     * @param value
     *     allowed object is
     *     {@link StringExpression }
     *     
     * @see #getCommand()
     */
    public void setCommand(StringExpression value) {
        this.command = value;
    }

    /**
     * Flags given to the build command when building files of this type.
     * 
     * @return
     *     possible object is
     *     {@link StringExpression }
     *     
     */
    public StringExpression getFlags() {
        return flags;
    }

    /**
     * Sets the value of the flags property.
     * 
     * @param value
     *     allowed object is
     *     {@link StringExpression }
     *     
     * @see #getFlags()
     */
    public void setFlags(StringExpression value) {
        this.flags = value;
    }

    /**
     * If true, replace any default flags value with the value in the sibling flags element. Otherwise, append the contents of the sibling flags element to any default flags value.
     * 
     * If the value is true and the "flags" element is empty or missing, this will have the result of clearing any default flags value.
     * 
     * @return
     *     possible object is
     *     {@link UnsignedBitExpression }
     *     
     */
    public UnsignedBitExpression getReplaceDefaultFlags() {
        return replaceDefaultFlags;
    }

    /**
     * Sets the value of the replaceDefaultFlags property.
     * 
     * @param value
     *     allowed object is
     *     {@link UnsignedBitExpression }
     *     
     * @see #getReplaceDefaultFlags()
     */
    public void setReplaceDefaultFlags(UnsignedBitExpression value) {
        this.replaceDefaultFlags = value;
    }

    /**
     * A generic mechanism for annotating elements with unique identifiers. See: http://www.w3.org/TR/xml-id/ for more information.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getId() {
        return id;
    }

    /**
     * Sets the value of the id property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     * @see #getId()
     */
    public void setId(String value) {
        this.id = value;
    }

}
